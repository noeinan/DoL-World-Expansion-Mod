:: Test
<<set $location to "sea">><<set $outside to 1>><<effects>>
<<endcombat>>

<<generatef1>><<person1>>
<<set $NPCList[0].vagina to "lefthand">>
		/*<<set $_npchand to $NPCList[_n].vagina.slice(0,4)>>*/

		<<if $rng lte 80>>
			<<He>> strokes <<his>> pussy with <<his>> hand.
			<<neutral 1>><<set $enemyarousal += 20>>
		<<else>>
			<span class="blue"><<He>> moves <<his>> hand away from <<his>> pussy.</span>
			<<set $NPCList[_n][$NPCList[_n].vagina] to 0>><<set $NPCList[_n].vagina to 0>>
		<</if>>


:: Robin
<<set $NPCName.Robin.love to 50>>
<<if $NPCName.Robin.love gte 50>>
<</if>>

:: Sex

<<if $sexstart is 1>>
	<<set $sexstart to 0>>
	<<consensual>>
	<<set $consensual to 1>>
	<<neutral 1>>

	<<maninit>>
	<<set $enemytrust += 100>><<promiscuity5>>
<</if>>
<<effects>>
<<effectsman>><<man>>
<<stateman>>
<br><br>
<<actionsman>>
<<if $finish is 1>>
	<span id="next"><<link [[Next|Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[Next|Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next|Sex Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Sex]]>><</link>></span><<nexttext>>
<</if>>

:: Sex Finish

<<set $outside to 0>><<effects>>
<<if $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	Text about the aftermath of them cumming.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Sex]]>><</link>>/*Point links wherever you want the player to end up*/
<<elseif $enemyhealth lte 0>>
	Text about escaping.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Sex]]>><</link>>
<<else>>
	Text about the encounter stopping because you ended it.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Sex]]>><</link>>
<</if>>

:: Rape

<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>

	<<maninit>>

	<<set $rescue to 1>>/*Remove line if rescue is impossible*/
<</if>>

<<effects>>

<<effectsman>><<man>>

<<stateman>>
<br><br>
<<actionsman>>

<<if $enemyhealth lte 0>>
	<span id="next"><<link [[Next|Rape Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next|Rape Finish]]>><</link>></span><<nexttext>>
<<elseif $alarm is 1 and $rescue is 1>>
	<span id="next"><<link [[Next|Rape Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Rape]]>><</link>></span><<nexttext>>
<</if>>

:: Rape Finish
<<effects>>
<<if $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	Text about the aftermath of them cumming.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Rape]]>><</link>>/*Link points wherever you want the player to end up*/

<<elseif $enemyhealth lte 0>>
	Text about escaping.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Rape]]>><</link>>

<<else>>
	<<set $rescued += 1>>/*Unnecessary if rescue is impossible*/
	Text about being rescued.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Rape]]>><</link>>

<</if>>

:: Fight
<<if $fightstart is 1>>
	<<set $fightstart to 0>>

	<<neutral 1>>

	<<maninit>>
	<<set $enemytrust -= 100>>
	<<set $enemyanger += 200>>
	<<npcidlegenitals>>

<</if>>

<<effects>>
<<effectsman>><<man>>

<<stateman>>
<br><br>
<<actionsman>>

<<if $enemyhealth lte 0>>
	<span id="next"><<link [[Next|Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next|Fight Finish]]>><</link>></span><<nexttext>>
<<elseif $pain gte 100 and $willpowerpain is 0>>
	<span id="next"><<link [[Next|Fight Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Fight]]>><</link>></span><<nexttext>>
<</if>>

:: Fight Finish
<<effects>>
<<if $enemyarousal gte $enemyarousalmax>>
	<<ejaculation>>
	Text about the aftermath of them cumming.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Fight]]>><</link>>/*Point links wherever you want the player to end up*/

<<elseif $enemyhealth lte 0>>
	Text about escaping.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Fight]]>><</link>>

<<else>>
	Text about being too hurt to fight.
	<br><br>
	<<tearful>> you recover.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<link [[Next|Fight]]>><</link>>

<</if>>

:: Skulduggery
<<effects>>

<<set $skulduggerydifficulty to 200>>
<<link [[Next|Skulduggery 2]]>><</link>><<skulduggerydifficulty>>
<br>

:: Skulduggery 2
<<effects>>

Possible text describing your attempt.
<br><br>

<<skulduggerycheck>>
<<if $skulduggerysuccess is 1>>

	Text describing your success.
	<br><br>

	<<if $skulduggery lte ($skulduggerydifficulty + 100)>>
		<<skulduggeryskilluse>>
	<<else>>
		<span class="blue">That was too easy. You didn't learn anything.</span>
		<br><br>
	<</if>>

	<<link [[Next|Skulduggery]]>><</link>>
	<br>

<<else>>

	Text describing your failure.
	<br><br>

	<<if $skulduggery lte ($skulduggerydifficulty + 100)>>
		<<skulduggeryskilluse>>
	<<else>>
		<span class="blue">That was too easy. You didn't learn anything.</span>
		<br><br>
	<</if>>

	<<link [[Next|Skulduggery]]>><</link>>
	<br>

<</if>>

:: Beast Sex
<<if $sexstart is 1>>
	<<set $sexstart to 0>>
	<<consensual>>
	<<set $consensual to 1>>
	<<neutral 1>>

	<<beastNEWinit 1 dog>>
	<<beastCombatInit>>
	<<beastTrainGenerate>>/* - Delete if there aren't multiple beasts*/
<</if>>

<<effects>>
<<effectsman>>
<br>
<<beast $enemyno>>
<br><br>

<<stateman>>
<br><br>
<<actionsman>>

<<if $finish is 1>>
	<span id="next"><<link [[Next|Beast Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next|Beast Sex Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[Next|Beast Sex Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Beast Sex]]>><</link>></span><<nexttext>>
<</if>>

:: Beast Sex Finish
<<effects>>

<<if $enemyarousal gte $enemyarousalmax>>

	<<beastejaculation>>

	Insert text about the aftermath of the beast cumming.
	<br><br>

	<<tearful>> you gather yourself.
	<br><br>

	<<clotheson>>
	<<endcombat>>

	<<link [[Next|Beast Rape]]>><<set $eventskip to 1>><</link>>

<<elseif $enemyhealth lte 0>>

	Insert text about the beast running.
	<br><br>

	<<tearful>> you gather yourself.
	<br><br>

	<<clotheson>>
	<<endcombat>>

	<<link [[Next|Beast Rape]]>><<set $eventskip to 1>><</link>>

<<else>>

	Insert text about the beast stopping because you asked it to.
	<br><br>

	<<tearful>> you gather yourself.
	<br><br>

	<<clotheson>>
	<<endcombat>>

	<<link [[Next|Beast Rape]]>><<set $eventskip to 1>><</link>>

<</if>>

:: Beast Rape
<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>

	<<beastNEWinit 2 dog>>/* - Delete if beasts are already generated*/
	<<beastCombatInit>>
	<<beastTrainGenerate>>/* - Delete if there aren't multiple beasts*/
<</if>>

<<effects>>
<<effectsman>>
<br><br>
<<beast $enemyno>>
<br><br>

<<stateman>>
<br><br>
<<actionsman>>

<<if $enemyhealth lte 0>>
	<span id="next"><<link [[Next|Beast Rape Finish]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next|Beast Rape Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link "Next">><<script>>state.display(state.active.title, null)<</script>><</link>></span><<nexttext>>
<</if>>

:: Beast Rape Finish
<<effects>>

<<if $enemyarousal gte $enemyarousalmax>>

	<<beastejaculation>>

	Insert text about the aftermath of the beast cumming.
	<br><br>

	<<tearful>> you gather yourself.
	<br><br>

	<<clotheson>>
	<<endcombat>>

	<<link [[Next|Beast Rape]]>><<set $eventskip to 1>><</link>>

<<elseif $enemyhealth lte 0>>

	Insert text about the beast running.
	<br><br>

	<<tearful>> you gather yourself.
	<br><br>

	<<clotheson>>
	<<endcombat>>

	<<link [[Next|Beast Rape]]>><<set $eventskip to 1>><</link>>

<<else>><<set $rescued += 1>>

	Insert text about being rescued.
	<br><br>

	<<tearful>> you gather yourself.
	<br><br>

	<<clotheson>>
	<<endcombat>>

	<<link [[Next|Beast Rape]]>><<set $eventskip to 1>><</link>>

<</if>>

:: Beast Gang
<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>
	<<molested>>


	<<beastNEWinit 1 wolf>>
	<<beastCombatInit>>
	<<beastTrainGenerate>>
	<<set $rescue to 1>>/*optional*/
<</if>>
<<effects>>
<<effectsman>>
<br>
<<beast $enemyno>>
<br><br>
<<stateman>>
<br><br>
<<actionsman>>
<<if $alarm is 1 and $rescue is 1>>
	<span id="next"><<link [[Next|Beast Gang End]]>><</link>></span><<nexttext>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<span id="next"><<link [[Next|Beast Gang End]]>><</link>></span><<nexttext>>
<<elseif $enemyhealth lte 0>>
	<span id="next"><<link [[Next|Beast Gang End]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Beast Gang]]>><</link>></span><<nexttext>>
<</if>>

:: Beast Gang End
<<effects>>
<<if $enemyhealth lte 0>>
	<<beastwound>>
	<<if $combatTrain.length gt 0>>
		The <<beasttype>> recoils in pain and fear, but another is eager for a go.

		<<combatTrainAdvance>>
		<br><br>
		[[Next|Beast Gang]]
	<<else>>
		The <<beasttype>> recoils in pain and fear.
		<<combatTrainAdvance>>
		<br><br>
		<<link [[Next|Beast Gang End]]>><<set $finish to 1>><</link>>
	<</if>>
<<elseif $enemyarousal gte $enemyarousalmax>>
	<<beastejaculation>>
	<<if $combatTrain.length gt 0>>
		Satisfied, the <<beasttype>> moves and another takes its turn.

		<<combatTrainAdvance>>
		<br><br>
		[[Next|Beast Gang]]
	<<else>>
		Satisfied, the <<beasttype>> moves away from you.
		<<combatTrainAdvance>>
		<br><br>
		<<link [[Next|Beast Gang End]]>><<set $finish to 1>><</link>>
	<</if>>
<<elseif $finish is 1>>
	<<if $enemywounded is 1 and $enemyejaculated is 0>>
		The <<beasttype>> whimpers and flees.
	<<elseif $enemywounded is 0 and $enemyejaculated is 1>>
		Satisfied, the <<beasttype>> leaves.
	<<elseif $enemywounded gte 2 and $enemyejaculated is 0>>
		Feeling that you're more trouble than you're worth, the beasts flee.
	<<elseif $enemywounded is 0 and $enemyejaculated gte 2>>
		The beasts leave you spent and shivering.
	<<elseif $enemywounded gte 1 and $enemyejaculated gte 1>>
		The beasts leave you spent and shivering.
	<</if>>
	<br><br>
	<<tearful>> you gather yourself.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<destinationeventend>>
<<elseif $alarm is 1 and $rescue is 1>>
	<<set $rescued += 1>>

	You are rescued.
	<br><br>
	<<tearful>> you gather yourself.
	<br><br>
	<<clotheson>>
	<<endcombat>>
	<<destinationeventend>>
<</if>>

:: Seduce
<<effects>>

<<set $seductiondifficulty to 6000>>
<<seductioncheck>>
<br><br>
<<if $seductionskill lt 1000>>
	<span class="gold">You feel more confident in your powers of seduction.</span>
	<br><br>
<</if>>
<<seductionskilluse>>

Text detailing your seduction attempt.
<<promiscuity3>>

<<if $seductionrating gte $seductionrequired>>

	Text detailing your seduction success.
	<br><br>

<<else>>

	Text detailing your seduction failure.
	<br><br>

<</if>>

:: Lock

<<set $lock to 300>>

The door is locked tight.
<br><br>

	<<if $skulduggery gte $lock>>
	<span class="green">The lock looks easy to pick.</span>
	<br><br>

	<<link [[Break in (0:05)|Elk Compound Interior]]>><<pass 5>><<crimeup 1>><</link>><<crime>>
	<br>
	<<else>>
	<span class="red">The lock looks beyond your ability to pick.</span><<skulduggeryrequired>>
	<br><br>
	<</if>>

You successfully pick the lock and enter the building.
<<set $compoundcentre to 1>><<set $compoundalarm += 1>>

<<if $skulduggery lt 400>>
<<skulduggeryskilluse>>
<<else>>
<span class="blue">There's nothing more you can learn from locks this simple.</span>
<</if>>

:: Template for a widget that outputs text based on character's state

<<widget "widgetname">>
<<exposure>>/*Makes sure your clothing state is up to date*/
<<if $optionalvariable is "something">>
	<<if $trauma gte (($traumamax / 5) * 4)>>
		<<if $stress gte (($stressmax / 5) * 4)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<elseif $stress gte (($stressmax / 5) * 1)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<else>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<</if>>
	<<elseif $trauma gte (($traumamax / 5) * 1)>>
		<<if $stress gte (($stressmax / 5) * 4)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<elseif $stress gte (($stressmax / 5) * 1)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<else>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<</if>>
	<<else>>
		<<if $stress gte (($stressmax / 5) * 4)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<elseif $stress gte (($stressmax / 5) * 1)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<else>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<</if>>
	<</if>>
<<else>>
	<<if $trauma gte (($traumamax / 5) * 4)>>
		<<if $stress gte (($stressmax / 5) * 4)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<elseif $stress gte (($stressmax / 5) * 1)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<else>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<</if>>
	<<elseif $trauma gte (($traumamax / 5) * 1)>>
		<<if $stress gte (($stressmax / 5) * 4)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<elseif $stress gte (($stressmax / 5) * 1)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<else>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<</if>>
	<<else>>
		<<if $stress gte (($stressmax / 5) * 4)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<elseif $stress gte (($stressmax / 5) * 1)>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<<else>>
			<<if $arousal gte (($arousalmax / 5) * 4)>>

			<<elseif $arousal gte (($arousalmax / 5) * 1)>>

			<<else>>

			<</if>>
		<</if>>
	<</if>>
<</if>>
<</widget>>

<<set $danger to random(1, 10000)>><<set $dangerevent to 0>>
	<<if $danger gte (9900 - $allure)>>

	<<else>>

	<</if>>

<<if $test is "" or $test is undefined>><<set $test to "default">><</if>>
<<textbox "$test" $test>>

<<if $physique gte $rng * 100 + 6000>>

<</if>>

		<<if $npcspeechcycle is 0>>
		<<He>> speaks. ""
		<<elseif $npcspeechcycle is 1>>
		<<He>> speaks. ""
		<<elseif $npcspeechcycle is 2>>
		<<He>> speaks. ""
		<<elseif $npcspeechcycle is 3>>
		<<He>> speaks. ""
		<<elseif $npcspeechcycle is 4>>
		<<He>> speaks. ""
		<<elseif $npcspeechcycle is 5>>
		<<He>> speaks. ""
		<<else>>
		<<He>> speaks. ""
		<</if>>

:: Save and load NPC
<<generate1>><<generate2>>
<<saveNPC 0 "john">>
<<saveNPC 1 "jane">>
<<endevent>>

<<loadNPC 0 "john">><<person1>>
<<loadNPC 1 "jane">><<person2>>

<<endevent>>

<<if $per_npc.john isnot undefined>>
	<<loadNPC 0 "john">><<person1>>
	<<endevent>>
<</if>>
<<if $per_npc.jane isnot undefined>>
	<<loadNPC 0 "jane">><<person1>>
	<<endevent>>
<</if>>

<<clearNPC "john">>
<<clearNPC "jane">>

:: Misc

$NPCName.Robin.love
<<npcincr Robin love 1>>

<<for _i to 0; _i lt $NPCName.length; _i++>>
<</for>>

<<set $antiquemoney += 40>><<museumAntiqueStatus "antiqueforestdagger" "found">>

/*To capitalise the first letter of a string:*/
<<print $string.toLocaleUpperFirst()>>

/*Using .length with a generic object*/
<<set _skin_keys to Object.keys(setup.bodywriting)>>
<<for _s to 0; _s lt _skin_keys.length; _s++>>
	<<print setup.bodywriting[_skin_keys[_s]].writing>>
	<br>
<</for>>

:: Tentacles
<<effects>>

<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<set $combat to 1>>
	<<set $enemytype to "tentacles">>
	<<molested>>
	<<controlloss>>

	<<tentaclestart 8 15>>

<</if>>

<<statetentacles>>
You count $tentacles.active tentacles surrounding you.

<<effects>>
<<effectstentacles>>
<<tentacles>>
<<actionstentacles>>

<<if $tentacles.active lte ($tentacles.max / 2)>>
	<span id="next"><<link [[Next|Tentacles Finish]]>><</link>></span><<nexttext>>
<<else>>
	<span id="next"><<link [[Next|Tentacles]]>><</link>></span><<nexttext>>
<</if>>

:: Tentacles Finish
<<effects>>

Description of escaping/being left alone by the tentacles.
<br><br>

<<tearful>> you escape.
<br><br>

<<clotheson>>
<<endcombat>>

<<link [[Next|Tentacles]]>><</link>>
<br>

/*How to destroy a cursed item, replacing "face" with the slot in question:*/
<<set $worn.face.type.push("broken")>>
<<faceruined>>

<<if $exposed gte 2 and $exhibitionism lt 95 or $exposed gte 2 and $uncomfortable.nude is true>>

<<else>>

<</if>>

:: Masturbation

<<effects>>
<<if $masturbationstart is 1>>
	<<set $masturbationstart to 0>>
	<<set $masturbationstat += 1>>
	<<masturbationstart>>
<</if>>
<<masturbationeffects>>
<<masturbationactions>>
<<link [[Continue|Masturbation]]>><</link>><<nexttext>>
<br>
<<link [[Stop|Masturbation Finish]]>><<set $finish to 1>><</link>>
<br>

:: Masturbation Finish

<<effects>>
Optional text about finishing masturbating.
<br><br>

<<endmasturbation>>
<<endcombat>>

<<tearful>> you continue on your adventure.
<br><br>

<<link [[Next|Masturbation]]>><<clotheson>><</link>>
<br>

/*Splits text by NPC genitals and breastsize*/
<<if $NPCList[0].penis isnot "none">>
	<<if $NPCList[0].breastsize gte 3>>
		They have a penis and reasonably sized breasts.
	<<else>>
		They have a penis and small/no breasts.
	<</if>>
<<else>>
	<<if $NPCList[0].breastsize gte 3>>
		They have no penis and reasonably sized breasts.
	<<else>>
		They have no penis and small/no breasts.
	<</if>>
<</if>>

:: Physique Check

<<physiquedifficulty arg1 arg2>>/*On previous passage after link. Displays the difficulty. First argument is the physique required to have any chance of success. Second argument is the physique required to have a 100% chance of success. Argument 1 defaults to 1 if left blank. Argument 2 defaults to $physiquemax if left blank, which is 20000 as of 0.2.9.0. Argument 3 accepts true and prevents any text from showing in cases where there are multiple checks of the same time in the previous passage*/

/*<<physiquedifficulty arg1 arg2 true>>Optional check just before here when there are multiple checks*/
<<if $physiqueSuccess>>/*Replace 1 and $physiquemax with whatever numbers/variables used as arguments in <<physiquedifficulty>>*/

Text about passing the physique check.

<<else>>

Text about failing the physique check.

<</if>>

:: Encounter Movements

<span class="blue"><<He>> positions <<his>> $NPCList[_n].penisdesc in front of your mouth.</span>
<<neutral 5>><<set $mouthuse to "penis">><<set $NPCList[_n].penis to "mouthentrance">><<set $mouthstate to "entrance">><<set $speechmouthentrance to 1>>

<span class="purple"><<He>> wraps <<his>> legs around your head and presses <<his>> pussy against your mouth.</span>
<<submission 5>><<set $mouthuse to "othervagina">><<set $NPCList[_n].vagina to "mouth">><<set $mouthstate to "othervagina">><<violence 3>><<bruise face>><<set $speechvaginamouth to 1>>

<span class="blue"><<He>> moves between your legs, positioning <<his>> $NPCList[_n].penisdesc in front of your <<pussy>>.</span>
<<neutral 5>><<set $vaginause to "penis">><<set $NPCList[_n].penis to "vaginaentrance">><<set $vaginastate to "entrance">><<set $speechvaginaentrance to 1>>

<<set $penisuse to "othervagina">><<set $NPCList[_n].vagina to "penisentrance">><<set $penisstate to "entrance">>
<span class="blue"><<He>> straddles you, <<his>> pussy hovering close to your <<penis>>.</span>

<span class="blue"><<He>> moves between your legs, positioning <<his>> $NPCList[_n].penisdesc in front of your <<bottom>>.</span>
<<neutral 5>><<set $anususe to "penis">><<set $NPCList[_n].penis to "anusentrance">><<set $anusstate to "entrance">><<set $speechanusentrance to 1>>

:: Monster Selection
<!-- Modified for Monster People -->
<<if ($monsterchance gte 1 and $hallucinations gte 1) or ($monsterchance gte 1 and $monsterhallucinations is "f") or ($bestialitydisable is "t")>>
	<<if $malechance lt random(1, 100)>>
		Monstergirl
	<<else>>
		Monsterboy
	<</if>>
<<else>>
	Beast
<</if>>

:: Reminder of how to impact plants outside tending

<<set _garden_location to "garden">>
<<for _i to 0; _i lt $plots[_garden_location].length; _i++>>
	<<set _tending_temp to _i>>
	<<set $plots[_garden_location][_tending_temp].water to 1>>
<</for>>


:: Reminder of how to give plants to the player outside planting

<<tending_harvest red_rose medium 3>>


:: Machine

<<if $molestationstart is 1>>
	<<set $molestationstart to 0>>
	<<controlloss>>
	<<violence 1>>
	<<neutral 1>>

	<<set $machine_health to 10>><<set $machine_ammo to 3>>/*Used by following widget. Must be set.*/
	<<machine_init tattoo vaginal anal arm_chains leg_chains>>/*Include each machine type you want present as an argument*/
	<<set $machine.tattoo.armed to 1>>/*Remove if there's no tattoo gun, or you don't want the tattoo gun to be able to remove tattoos*/
	<<set $machine.vaginal.armed to 1>>/*Remove if there's no vaginal sex machine, or you don't want the sex machine to be able to easily destroy clothes.*/
	<<set $machine.anal.armed to 1>>
	<<prop rails table milk neck_shackle>>/*Delete props as appropriate*/
	<<set $bodywriting_special to "dungeon">>/*Makes all tattoos appropriate for dungeon. Remove for a broader range of tattoos.*/
<</if>>

<<effects>>

<<machine_effects>><<machine_combat>>
<<machine_state>>

/*Debug info. Remove from playable events*/
Number of active machines: <<print $machine.number>><br>
<br>
<<if $machine.tattoo>>
	Tattoo gun use: <<print $machine.tattoo.use>><br>
	Tattoo gun state: <<print $machine.tattoo.state>><br>
	Tattoo gun health: <<print $machine.tattoo.health>><br>
	Tattoo gun hack: <<print $machine.tattoo.hack>><br>
<</if>>
<br>
<<if $machine.vaginal>>
	Phallic machine use: <<print $machine.vaginal.use>><br>
	Phallic machine state: <<print $machine.vaginal.state>><br>
	Phallic machine health: <<print $machine.vaginal.health>><br>
	Phallic machine hack: <<print $machine.vaginal.hack>><br>
<</if>>
<br>
<<if $machine.anal>>
	Small phallic machine use: <<print $machine.anal.use>><br>
	Small phallic machine state: <<print $machine.anal.state>><br>
	Small phallic machine health: <<print $machine.anal.health>><br>
	Small phallic machine hack: <<print $machine.anal.hack>><br>
<</if>>
<br>
<<if $machine.arm_chains>>
	Arm chains use: <<print $machine.arm_chains.use>><br>
	Arm chains state: <<print $machine.arm_chains.state>><br>
	Arm chains health: <<print $machine.arm_chains.health>><br>
	Arm chains hack: <<print $machine.arm_chains.hack>><br>
<</if>>
<br>
<<if $machine.leg_chains>>
	Leg chains use: <<print $machine.leg_chains.use>><br>
	Leg chains state: <<print $machine.leg_chains.state>><br>
	Leg chains health: <<print $machine.leg_chains.health>><br>
	Leg chains hack: <<print $machine.leg_chains.hack>><br>
<</if>>
/*Debug info end*/


<br><br>
<<machine_actions>>

<<if $machine.number lte 0 or $finish is 1>>
	<<link [[Next|Machine End]]>><</link>>
<<else>>
	<<link [[Next|Machine]]>><</link>>
<</if>>
<br>
<<link [[End|Machine End]]>><</link>>
<br>


:: Machine End
<<effects>>

<<machine_end>>
<<clotheson>>

<<link [[Machine]]>><<set $molestationstart to 1>><</link>>
<br>


:: Struggle
<<effects>>

<<if $struggle_start is 1>>
	<<struggle_init>>
	<<set $struggle.creature to "lurker">>/*Creature species*/
	<<struggle_creatures 5 2>>/*How many creatures will be involved, and their health.*/
	<<set $combat to 1>>
	<<controlloss>>
	<<violence 1>>
	<<molested>>
	<<set $struggle.mouth.creature to "lurker">><<set $mouthuse to "struggle">><<set $mouthstate to "struggle">><<set $struggle.enemy[0].location to "mouth">>/*Encounters can begin with a creature already attached to a body part. Optional.*/
	<<unset $struggle_start>>
<</if>>

<<if $condition is "met">>
	<<struggle_add 1 1>>/*Adds more creatures, with a specific health.*/
	<span class="pink">Another creature attacks!</span>
	<br><br>
<</if>>

<<struggle>>



<<if $struggle.done gte $struggle.number>>
	<<link [[Next|Struggle End]]>><</link>>
	<br>
<<else>>
	<<link [[Next|Struggle]]>><</link>>
	<br>
<</if>>


:: Struggle End
<<effects>>

Stuff happens.
<br><br>

<<clotheson>>
<<endcombat>>

<<link [[Next|Struggle]]>><<set $struggle_start to 1>><</link>>
<br>

/*Farm stage reminders:
$farm_stage = 1: Alex met, farm work explained.
$farm_stage = 2: Farm work accepted. 1 field clear
$farm=stage = 3: Worked at the farm a little, harasser appeared.
$farm=stage = 4: 2 fields clear. Alex offered booze.
$farm=stage = 5: 3 fields clear. Remy threatened Alex.
$farm=stage = 6: 4 fields clear. Alex's parent visits.
$farm=stage = 7: Time passed since Alex's parent's visit. Bailey visits. Fields are now controlled by the player, steeds can be saddled, and Alex can be chosen as a love interest. Attacks begin. Wall can be upgraded.
$farm=stage = 8: 5 fields clear. More upgrades can be bought.
$farm=stage = 9: 6 fields clear. Lab unlocked. 1 phial available for PC to sell to compound.
$farm=stage = 10: 7 fields clear. "Hurl net" ability unlocked, and more phials can now be produced.
$farm=stage = 11: 8 fields clear. Strange flowers can now be grown.
$farm=stage = 12: 9 fields clear. Remy threatens again.
*/
