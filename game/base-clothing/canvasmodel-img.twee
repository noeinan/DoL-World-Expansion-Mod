:: Widgets Canvas Model Main [widget]

<!--
<<canvasimg [CSSCLASSES]>>
Render full player image.
-->
<<widget "canvasimg">>
	<<selectmodel "main" "sidebar">>
	<<modelprepare-player-body>>
	<<modelprepare-player-clothes>>
	<<if $sidebarAnimations isnot false>>
		<<animatemodel $args[0]>>
	<<else>>
		<<rendermodel $args[0]>>
	<</if>>
<</widget>>

<!--
Set model options & filters from player body
Requires prior <<selectmodel "main">>
-->
<<widget "modelprepare-player-body">>

/*Prep for image checks*/
<<set _disabled to ["disabled","hidden"]>>

<!-- unwrap tanLoc/tanValues array -->
<<twinescript>>
let tanValByName = {
	body: 0,
	breasts: -0.01,
	penis: -0.01,
	swimshorts: -0.01,
	swimsuitTop: -0.01,
	swimsuitBottom: -0.01,
	bikiniTop: -0.01,
	bikiniBottom: -0.01,
	tshirt: -0.01 /* No sprites yet? */
};
for (let i = 0; i < $skinColor.tanLoc.length; i++) {
	tanValByName[$skinColor.tanLoc[i]] = $skinColor.tanValues[i]/100;
}

_modeloptions.skin_type = $skinColor.natural || "light";
_modeloptions.skin_tone = tanValByName["body"];
if ($skinColor.tanningEnabled is true){
	for (let loc in tanValByName) {
		if (loc !== 'body') {
			_modeloptions['skin_tone_'+loc] = tanValByName[loc];
		}
	}
} else {
	_modeloptions.show_tanlines = false;
}
<</twinescript>>

<<if $makeup.eyeshadow != 0>>
	<<set _modeloptions.eyeshadow_colour to $makeup.eyeshadow>>
<</if>>
<<if $makeup.mascara != 0>>
	<<set _modeloptions.mascara_colour to $makeup.mascara>>
<</if>>
<<if $makeup.lipstick != 0>>
	<<set _modeloptions.lipstick_colour to $makeup.lipstick>>
<</if>>

<<set _modeloptions.eyes_colour = ($makeup.eyelenses != 0 ? $makeup.eyelenses : $eyecolour)>>
<<set _modeloptions.hair_colour = $haircolour>>
<<set _modeloptions.brows_colour = ($makeup.browscolour != 0 ? $makeup.browscolour : $naturalhaircolour)>>
<<set _modeloptions.pbhair_colour = ($makeup.pbcolour != 0 ? $makeup.pbcolour : $naturalhaircolour)>>

<!--
	 ██████   █████  ███████ ███████
	 ██   ██ ██   ██ ██      ██
	 ██████  ███████ ███████ █████
	 ██   ██ ██   ██      ██ ██
	 ██████  ██   ██ ███████ ███████
-->

<<switch $player.perceived_breastsize>>
	<<case 12>>
		<<set _modeloptions.breast_size to 6>>
	<<case 8 9 10 11>>
		<<set _modeloptions.breast_size to 5>>
	<<case 6 7>>
		<<set _modeloptions.breast_size to 4>>
	<<case 4 5>>
		<<set _modeloptions.breast_size to 3>>
	<<case 3>>
		<<set _modeloptions.breast_size to 2>>
	<<case 0 1 2>>
		<<set _modeloptions.breast_size to 1>>
<</switch>>
<<set _modeloptions.breasts to "default">>
<<if $sexStats>>
	<<set _modeloptions.belly to $sexStats.vagina.pregnancy.bellySize>>
<</if>>

<!--
 -    ██   ██  █████  ██ ██████
 -    ██   ██ ██   ██ ██ ██   ██
 -    ███████ ███████ ██ ██████
 -    ██   ██ ██   ██ ██ ██   ██
 -    ██   ██ ██   ██ ██ ██   ██
 -
 -
-->

<<set _modeloptions.hair_sides_length to $hairlengthstage>>
<<set _modeloptions.hair_sides_type to $hairtype>>
<<set _modeloptions.hair_sides_position to $hairposition>>
<<set _modeloptions.hair_fringe_length to $fringelengthstage>>
<<set _modeloptions.hair_fringe_type to $fringetype>>

<!--
 -     █████  ██████  ███    ███ ███████
 -    ██   ██ ██   ██ ████  ████ ██
 -    ███████ ██████  ██ ████ ██ ███████
 -    ██   ██ ██   ██ ██  ██  ██      ██
 -    ██   ██ ██   ██ ██      ██ ███████
 -
 -->

<<if $leftarm isnot "bound" and $leftarm isnot "grappled">>
	<<if $dontHide is false and $worn.over_upper.exposed gte 1 and ($worn.upper.exposed gte 1 or $upperwetstage gte 3)
	and ($exposed gte 2 and $uncomfortable.nude is true or $exposed is 1 and $uncomfortable.underwear is true)>>
		<<set _coverBreasts to true>>
		<<set _modeloptions.arm_left to "cover">> <!-- might be changed back to "idle" if covering with wings -->
	<<else>>
		<<set _coverBreasts to false>>
		<<set _modeloptions.arm_left to "idle">>
	<</if>>
<<else>>
	<<set _modeloptions.arm_left to "none">>
<</if>>

<<if $rightarm isnot "bound" and $rightarm isnot "grappled">>
	<<if $dontHide is false and $worn.over_lower.exposed gte 1 and ($worn.lower.exposed gte 1 or $lowerwetstage gte 3)
	and ($exposed gte 2 and $uncomfortable.nude is true or $exposed is 1 and $uncomfortable.underwear is true)>>
		<<set _coverCrotch to true>>
		<<set _modeloptions.arm_right to "cover">> <!-- might be changed back to "idle" if covering with wings/tail -->
	<<else>>
		<<set _coverCrotch to false>>
		<<set _modeloptions.arm_right to "idle">>
	<</if>>
<<else>>
	<<set _modeloptions.arm_right to "none">>
<</if>>

<<if $leftarm isnot "bound" and $leftarm isnot "grappled">>

	<<if _coverBreasts is false>>
		<<if $exposed gte 2 and $dontHide is false and $uncomfortable.flaunting is false>>
			<<set _modeloptions.demon_wings_state to "flaunt">>
		<<else>>
			<<set _modeloptions.demon_wings_state to "idle">>
		<</if>>
		<<set _modeloptions.angel_wing_right to "idle">>
		<<set _modeloptions.fallen_wing_right to "idle">>
		<<set _modeloptions.bird_wing_right to "idle">>
	<<elseif _coverBreasts is true>>
		<<if !_disabled.includes($transformationParts.demon.wings)>>
			<<set _modeloptions.demon_wings_state to "cover">>
			<<set _modeloptions.arm_left to "idle">>
		<<elseif !_disabled.includes($transformationParts.angel.wings)>>
			<<set _modeloptions.angel_wing_right to "cover">>
			<<set _modeloptions.arm_left to "idle">>
		<<elseif !_disabled.includes($transformationParts.fallenAngel.wings)>>
			<<set _modeloptions.fallen_wing_right to "cover">>
			<<set _modeloptions.arm_left to "idle">>
		<<elseif !_disabled.includes($transformationParts.bird.wings)>>
			<<set _modeloptions.bird_wing_right to "cover">>
			<<set _modeloptions.arm_left to "idle">>
		<</if>>
	<</if>>
<</if>>

<<if $rightarm isnot "bound" and $rightarm isnot "grappled">>
	<<if _coverCrotch is false>>
		<<if !_disabled.includes($transformationParts.demon.tail)>>
			<<if $exposed gte 2 and $dontHide is false and $uncomfortable.flaunting is false>>
				<<set _modeloptions.demon_tail_state to "flaunt">>
			<<else>>
				<<set _modeloptions.demon_tail_state to "idle">>
			<</if>>
		<</if>>
		<<set _modeloptions.angel_wing_left to "idle">>
		<<set _modeloptions.fallen_wing_left to "idle">>
		<<set _modeloptions.bird_wing_left to "idle">>
	<<elseif _coverCrotch is true>>
		<<if !_disabled.includes($transformationParts.demon.wings)>>
			<<set _modeloptions.demon_tail_state to "cover">>
			<<set _modeloptions.arm_right to "idle">>
		<<elseif !_disabled.includes($transformationParts.angel.wings)>>
			<<set _modeloptions.angel_wing_left to "cover">>
			<<set _modeloptions.arm_right to "idle">>
		<<elseif !_disabled.includes($transformationParts.fallenAngel.wings)>>
			<<set _modeloptions.fallen_wing_left to "cover">>
			<<set _modeloptions.arm_right to "idle">>
		<<elseif !_disabled.includes($transformationParts.bird.wings)>>
			<<set _modeloptions.bird_wing_left to "cover">>
			<<set _modeloptions.arm_right to "idle">>
		<</if>>
	<</if>>
<</if>>

<!--
 -    ██     ██ ██████  ██ ████████ ██ ███    ██  ██████  ███████
 -    ██     ██ ██   ██ ██    ██    ██ ████   ██ ██       ██
 -    ██  █  ██ ██████  ██    ██    ██ ██ ██  ██ ██   ███ ███████
 -    ██ ███ ██ ██   ██ ██    ██    ██ ██  ██ ██ ██    ██      ██
 -     ███ ███  ██   ██ ██    ██    ██ ██   ████  ██████  ███████
-->

<<if $bodywritingImages is true>>
	<<for _label, _value range $skin>>
		<<if _value.writing>>
			<<set _modeloptions["writing_"+_label] to setup.bodywriting_namebyindex[_value.index]>>
		<</if>>
	<</for>>
<</if>>

<!--
 -    ███████  █████   ██████ ███████
 -    ██      ██   ██ ██      ██
 -    █████   ███████ ██      █████
 -    ██      ██   ██ ██      ██
 -    ██      ██   ██  ██████ ███████
 -->

<<set _modeloptions.facestyle to $facestyle>>

<<set _modeloptions.freckles = $player.freckles == true and $makeup.concealer != 1>>

<!-- Eyes -->
<<set _modeloptions.trauma to $trauma gte ($traumamax * 0.9)>>
<<set _modeloptions.blink to $blinkingdisable is "f">>
<<set _modeloptions.eyes_bloodshot to $pain gte 100 and $willpowerpain is 0>>
<<set _modeloptions.eyes_half to $halfcloseddisable isnot "t" and ($arousal gte ($arousalmax / 5) * 4 or $orgasmdown gte 1) and $trauma lt ($traumamax * 0.9) and $pain lt 60 and $eyelidTEST is true>>

<!-- Brows -->
<<if $trauma gte $traumamax>>
	<<set _modeloptions.brows = "top">>
<<elseif $pain gte 60>>
	<<set _modeloptions.brows = "low">>
<<elseif $arousal gte ($arousalmax / 5) * 4 or $orgasmdown gte 1>>
	<<set _modeloptions.brows = "orgasm">>
<<elseif $pain gte 20>>
	<<set _modeloptions.brows = "mid">>
<<else>>
	<<set _modeloptions.brows = "top">>
<</if>>

<!-- Mouth -->
<<if $trauma gte $traumamax>>
	<<set _modeloptions.mouth = "neutral">>
<<elseif $pain gte 60 or $orgasmdown gte 1>>
	<<set _modeloptions.mouth = "cry">>
<<elseif $exposed is 2 and $uncomfortable.nude is true and $dontHide is false or $pain gte 20>>
	<<set _modeloptions.mouth = "frown">>
<<elseif $pain gte 1 or ($exposed is 1 and $uncomfortable.underwear is true) or ($combat is 1 and $consensual isnot 1)>>
	<<set _modeloptions.mouth = "neutral">>
<<else>>
	<<set _modeloptions.mouth = "smile">>
<</if>>

<!-- Blush -->
<<set _modeloptions.blush = Math.min(5, Math.floor($arousal / 2000) + 1)>>
<<if _modeloptions.blush lt 2 and $exposed gte 2>>
	<<set _modeloptions.blush = 2>>
<<elseif $arousal lt 100 and $exposed lt 1>>
	<<set _modeloptions.blush = 0>>
<</if>>
<<if !$worn.over_upper.type.includes("naked") and !$worn.over_lower.type.includes("naked") and
$worn.upper.type.includes("naked") and $worn.lower.type.includes("naked") and
$worn.under_upper.type.includes("naked") and $worn.under_lower.type.includes("naked")>>
	<<set _modeloptions.blush = 2>>
<</if>>

<!-- Tears -->
<<set _modeloptions.tears = Math.floor(Math.clamp($pain, 0, 99) / 20)>>

<!--
 -    ████████ ███████ ███████
 -       ██    ██      ██
 -       ██    █████   ███████
 -       ██    ██           ██
 -       ██    ██      ███████
 -->

<!-- wing and tail idle/cover/flaunt state is configured in the arms section above -->

<<set _modeloptions.angel_wings_type to $transformationParts.angel.wings>>
<<set _modeloptions.angel_halo_type to $transformationParts.angel.halo>>

<<set _modeloptions.fallen_wings_type to $transformationParts.fallenAngel.wings>>
<<set _modeloptions.fallen_halo_type to $transformationParts.fallenAngel.halo>>

<<set _modeloptions.demon_wings_type to $transformationParts.demon.wings>>
<<set _modeloptions.demon_tail_type to $transformationParts.demon.tail>>
<<set _modeloptions.demon_horns_type to $transformationParts.demon.horns>>

<<set _modeloptions.wolf_tail_type to $transformationParts.wolf.tail>>
<<set _modeloptions.wolf_ears_type to $transformationParts.wolf.ears>>
<<set _modeloptions.wolf_pits_type to $transformationParts.wolf.pits>>
<<set _modeloptions.wolf_pubes_type to $transformationParts.wolf.pubes>>
<<set _modeloptions.wolf_cheeks_type to $transformationParts.wolf.cheeks>>

<<set _modeloptions.cat_tail_type to $transformationParts.cat.tail>>
<<set _modeloptions.cat_ears_type to $transformationParts.cat.ears>>

<<set _modeloptions.cow_horns_type to $transformationParts.cow.horns>>
<<set _modeloptions.cow_tail_type to $transformationParts.cow.tail>>
<<set _modeloptions.cow_ears_type to $transformationParts.cow.ears>>

<<set _modeloptions.bird_wings_type to $transformationParts.bird.wings>>
<<set _modeloptions.bird_tail_type to $transformationParts.bird.tail>>
<<set _modeloptions.bird_eyes_type to $transformationParts.bird.eyes>>
<<set _modeloptions.bird_malar_type to $transformationParts.bird.malar>>
<<set _modeloptions.bird_plumage_type to $transformationParts.bird.plumage>>
<<set _modeloptions.bird_pubes_type to $transformationParts.bird.pubes>>

/*noeinan mod START*/
<<set _modeloptions.fox_ears_type to $transformationParts.fox.ears>>
<<set _modeloptions.fox_tail_type to $transformationParts.fox.tail>>

<<set _modeloptions.sheep_horns_type to $transformationParts.sheep.horns>>
<<set _modeloptions.sheep_ears_type to $transformationParts.sheep.ears>>
<<set _modeloptions.sheep_tail_type to $transformationParts.sheep.tail>>

<<set _modeloptions.bee_wings_type to $transformationParts.bee.wings>>
<<set _modeloptions.bee_tail_type to $transformationParts.bee.tail>>
<<set _modeloptions.bee_ears_type to $transformationParts.bee.ears>>
/*noeinan mod END*/

<!--
 -     ██████ ██████   ██████  ████████  ██████ ██   ██
 -    ██      ██   ██ ██    ██    ██    ██      ██   ██
 -    ██      ██████  ██    ██    ██    ██      ███████
 -    ██      ██   ██ ██    ██    ██    ██      ██   ██
 -     ██████ ██   ██  ██████     ██     ██████ ██   ██
-->

<<set _modeloptions.crotch_visible to true>>
<<if $pbdisable is "f">>
	<<set _modeloptions.pbhair_level = $pblevel>>
	<<set _modeloptions.pbhair_strip = $pbstrip>>
	<<set _modeloptions.pbhair_balls = $pblevelballs>>
<</if>>
<<if $penisexist is 1>>
	<<set _modeloptions.penis_size to Math.clamp($penissize, -2, 4)>>
	<<set _modeloptions.penis to ($player.virginity.penile === true ? "virgin" : "default") >>
	<<set _modeloptions.balls to $player.ballsExist>>
	<<set _modeloptions.penis_parasite to $parasite.penis.name>>
<</if>>
<<if $vaginaexist is 1>>
	<<set _modeloptions.clit_parasite to $parasite.clit.name>>
<</if>>

<<switch setup.bodyliquid.combined("vagina")>>
	<<case 5 6 7 8 9 10>><<set _modeloptions.drip_vaginal = "VeryFast">>
	<<case 4>><<set _modeloptions.drip_vaginal = "Fast">>
	<<case 3>><<set _modeloptions.drip_vaginal = "Slow">>
	<<case 2>><<set _modeloptions.drip_vaginal = "VerySlow">>
	<<case 1>><<set _modeloptions.drip_vaginal = "Start">>
<</switch>>

<<switch setup.bodyliquid.combined("anus")>>
	<<case 5 6 7 8 9 10>><<set _modeloptions.drip_anal = "VeryFast">>
	<<case 4>><<set _modeloptions.drip_anal = "Fast">>
	<<case 3>><<set _modeloptions.drip_anal = "Slow">>
	<<case 2>><<set _modeloptions.drip_anal = "VerySlow">>
	<<case 1>><<set _modeloptions.drip_anal = "Start">>
<</switch>>

<<switch setup.bodyliquid.combined("mouth")>>
	<<case 5 6 7 8 9 10>><<set _modeloptions.drip_mouth = "VeryFast">>
	<<case 4>><<set _modeloptions.drip_mouth = "Fast">>
	<<case 3>><<set _modeloptions.drip_mouth = "Slow">>
	<<case 2>><<set _modeloptions.drip_mouth = "VerySlow">>
	<<case 1>><<set _modeloptions.drip_mouth = "Start">>
<</switch>>

<<if $worn.upper.exposed gte 2 and $worn.under_upper.exposed gte 1>>
	<<set _chestVisible to true>>
<<elseif ($upperwetstage gt 0 or $worn.upper.type.includes("naked")) and ($underupperwetstage gt 0 or $worn.under_upper.type.includes("naked"))>>
	<<set _chestVisible to true>>
<</if>>
<<if _chestVisible>>
	<<set _modeloptions.nipples_parasite to $parasite.nipples.name>>
<</if>>

<</widget>>

<!--
 -     ██████ ██       ██████  ████████ ██   ██ ███████ ███████
 -    ██      ██      ██    ██    ██    ██   ██ ██      ██
 -    ██      ██      ██    ██    ██    ███████ █████   ███████
 -    ██      ██      ██    ██    ██    ██   ██ ██           ██
 -     ██████ ███████  ██████     ██    ██   ██ ███████ ███████
 -->
<!--
Set model options & filters for player clothes
-->
<<widget "modelprepare-player-clothes">>

<<if $worn.upper.type.includes("naked") and $worn.over_upper.type.includes("naked")>>
	<<if !$worn.under_upper.type.includes("naked")>>
		<<set _modeloptions.breasts to "cleavage">>
	<<else>>
		<<set _modeloptions.breasts to "default">>
	<</if>>
<<else>>
	<<set _modeloptions.breasts to "">>
<</if>>

<<if $worn.under_upper.type.includes("chest_bind")>>
	<<set _modeloptions.breast_size to 1>>
<</if>>

<<if $worn.lower.exposed gte 2 and $worn.under_lower.exposed gte 1>>
	<<set _modeloptions.crotch_visible to true>>
	<<set _modeloptions.crotch_exposed to true>>
<<elseif ($lowerwetstage gt 0 or $worn.lower.type.includes("naked")) and ($underlowerwetstage gt 0 or $worn.under_lower.type.includes("naked"))>>
	<<set _modeloptions.crotch_visible to true>>
	<<set _modeloptions.crotch_exposed to false>>
<<else>>
	<<set _modeloptions.crotch_visible to false>>
<</if>>

<<set _modeloptions.hood_down to $hoodDown>>
<<if ($worn.over_head.hood is 1 or ($worn.head.hood is 1 and $worn.over_head.mask_img isnot 1)) and $hoodDown is 0>>
	<<set _modeloptions.hair_sides_length to "short">>
	<<set _modeloptions.hair_fringe_length to "short">>
<</if>>

<<set _modeloptions.upper_tucked to $upperTucked and !$worn.upper.notuck and $worn.upper.outfitPrimary is undefined>>

<<twinescript>>
	let slots = [
		["upper", $upperwetstage],
		["over_upper"],
		["genitals"],
		["lower", $lowerwetstage],
		["over_lower"],
		["under_lower", $underlowerwetstage],
		["under_upper", $underupperwetstage],
		["hands"],
		["head"],
		["over_head"],
		["face"],
		["neck"],
		["legs"],
		["feet"],
	];
	for (let slotobj of slots) {
		let slot = slotobj[0];
		let worn = $worn[slot];
		switch (slotobj[1]) {
			case 1: _modeloptions['worn_'+slot+'_alpha'] = 0.9; break;
			case 2: _modeloptions['worn_'+slot+'_alpha'] = 0.7; break;
			case 3: _modeloptions['worn_'+slot+'_alpha'] = 0.5; break;
			default: _modeloptions['worn_'+slot+'_alpha'] = 1.0; break;
		}
		_modeloptions['worn_'+slot] = worn.index;
		_modeloptions['worn_'+slot+'_integrity'] = integrityKeyword(worn);
		_modeloptions['worn_'+slot+'_colour'] = worn.colour;
		if (worn.colour === 'custom') {
			/* TODO @aimozg We recalculate custom colour RGB here; in future versions, we should store custom colours in canvasfilter-friendly way */
			_modeloptions.filters['worn_'+slot+'_custom'] = worn.colourCanvasFilter || getCustomClothesColourCanvasFilter(worn.colourCustom);
		}
		_modeloptions['worn_'+slot+'_acc_colour'] = worn.accessory_colour;
		if (worn.accessory_colour === 'custom') {
			_modeloptions.filters['worn_'+slot+'_acc_custom'] = worn.accessory_colourCanvasFilter || getCustomClothesColourCanvasFilter(worn.accessory_colourCustom);
		}
	}
<</twinescript>>

<</widget>>

<<widget "canvas-player-base-body">>
	<<selectmodel "main">>
	<<modelprepare-player-body>>

	<!-- Reset covering -->
	<<set _modeloptions.arm_left to "idle">>
	<<set _modeloptions.arm_right to "idle">>
	<<set _modeloptions.angel_wing_left to "idle">>
	<<set _modeloptions.angel_wing_right to "idle">>
	<<set _modeloptions.fallen_wing_left to "idle">>
	<<set _modeloptions.fallen_wing_right to "idle">>
	<<set _modeloptions.demon_wing_left to "idle">>
	<<set _modeloptions.demon_wing_right to "idle">>
	<<set _modeloptions.bird_wing_left to "idle">>
	<<set _modeloptions.bird_wing_right to "idle">>
	<!-- Reset face -->
	<<set _modeloptions.blink to false>>
	<<set _modeloptions.eyes_half to false>>
	<<set _modeloptions.brows to "top">>
	<<set _modeloptions.mouth to "neutral">>
	<<set _modeloptions.tears to 0>>
	<<set _modeloptions.blush to 0>>
	<!-- Reset effects -->
	<<set _modeloptions.drip_vaginal to "">>
	<<set _modeloptions.drip_anal to "">>
	<<set _modeloptions.drip_mouth to "">>

	<<if $neverNudeMenus>>
		<<set _modeloptions.crotch_visible to false>>
		<<set _modeloptions.penis to "">>
		<<if $player.gender_appearance neq "m" or $player.perceived_breastsize gte 3>>
			<<set _modeloptions.worn_under_upper to 12>>
			<<set _modeloptions.worn_under_upper_colour to "pale white">>
		<</if>>
		<<set _modeloptions.worn_under_lower_colour to "pale white">>
		<<if $player.gender_appearance is "m">>
			<<set _modeloptions.worn_under_lower to 4>>
		<<else>>
			<<set _modeloptions.worn_under_lower to 1>>
		<</if>>
	<</if>>

	<<if $sidebarRenderer is 'both'>>
		<<rendermodel 'canvasimg-both'>>
	<<else>>
		<<rendermodel>>
	<</if>>
<</widget>>
