:: Body Comment Random Flavour Text Widgets [widget]
/* We have lists of remarks separated based on contextual relevance to let the user determine what's needed and offer variety without repeating ourselves.
 * It also allows us to separate our data depending on what would and wouldn't make sense to hear in a given situation, there's no sense in rejecting someone
 * for their penis size if the actual agent is about to sit on their dick.
 */
<<widget "bodycommentsetdata">>
/*
 * penis size
 * I've grouped things into categories to make them easier to fit to specific uses, questioning and asserting that a penis is useless is inappropriate
 * in some cases but in other cases affection is inappropriate
 *
 * the current groupings I've chosen for what I've come up with are as follows:
 * affection: all comments expressing affection towards the persons size
 * size_remarks: plain descriptions of lack of size
 * surprise: all comments expressing surprise or incredulity at their size or lack of size (think comments with "how" in them)
 * insult: all derisive comments intended to hurt the persons feelings
 * question_use: all questions suggesting the penis is unfit for purpose
 * assert_useless: flat out assert the penis is useless
 */

/*
 * sod it, ugly messy shit with 0 regard for scope it is, because twine hates us all
 * this is how were going to output text, were going to modify this thing wherever we like
 * may god have mercy upon my soul
 */
<<set _output_line to "">>

/* big pp */
<<set _big_penis_affection to [
	"giddyup horsey,",
	"like a fucking horse,",
	"you're so big, you might break me,",
	"you're huge,",
	"I bet bigger tastes better,"
]>>
<<set _big_penis_size_remarks to [
	"I've seen ponies smaller than that,",
	"that is ginormous,",
	"that's massive,",
	"it's so big,"
]>>
<<set _big_penis_surprise to [
	"how the hell are you that hung?",
	"oh my god, it's ginormous,",
	"I've never in my life seen a dick that big,",
	"oh wow, that is huge,",
	"Jesus fucking Christ that's big,",
	"wow, you're hung like a horse,",
	"it's so big!"
]>>
<<set _big_penis_question_use to [
	"can that massive thing even fit inside anyone?",
	"how the hell do you even get something like that inside you?",
	"can you even get hard without passing out with a dick that big?"
]>>
/* normal pp */

<<set _normal_penis_size_remarks to [
	"I prefer bigger ones, myself,",
	"not the biggest I've ever seen,",
	"I'm glad it's not too small,",
	"it's just the right size to suck,",
	"such a perfect size,"
]>>

<<set _normal_penis_affection to [
	"that cock is perfect decoration,",
	"I want a picture of that penis,",
	"that penis is adorable,",
	"that cock looks tasty,",
	"I've never seen a cock so cute,"
]>>

/* smol pp */
<<set _small_penis_affection to [
	"what a cute little dick,",
	"what a cute little dicklet,",
	"Such a small and cute penis,",
	"it's so small and cute,",
	"what an adorable penis,"
]>>
<<set _small_penis_size_remarks to [
	"it's tiny,",
	"it's smaller than my finger,",
	"it's so small,",
	"I've seen flash drives bigger than that,",
	"I've seen batteries bigger than that,"
]>>
<<set _small_penis_surprise to [
	"how the hell are you that small?",
	"I thought <<pher>> penis would be bigger,",
	"oh my god, it's tiny,",
	"oh my god, it's smaller than my finger,",
	"<<pShes>> so small!"
]>>
<<set _small_penis_insult to [
	"what a pathetic little shrimp dick,",
	"nice dick, loser,"
]>>
<<set _small_penis_question_use to [
	"well you're not much good down there, are you?",
	"who exactly are you planning on fucking with that tiny thing?"
]>>
<<set _small_penis_assert_useless to [
	"a dick that small belongs in chastity, you're not going to be using it anyway,",
	"oh my god, that little thing should be locked up,"
]>>

/* micro pp */
<<set _micropenis_size_remarks to [
	"that looks more like a swollen clit than a dick,",
	"I've seen coins bigger than that,",
	"It's so cute and tiny,"
]>>
<<set _micropenis_surprise to [
	"how the hell are you so tiny?",
	"<<pShes>> so tiny!",
	"it's so tiny!",
	"oh my god, it's like an acorn,",
	"I can't believe it's so tiny,"
]>>
<<set _micropenis_insult to [
	"no amount of oral is making up for that,",
	"nice little willy you've got, try not to hurt anyone with it,",
	"I've never seen such a pathetic penis,"
]>>
<<set _micropenis_question_use to [
	"can that little dick of yours even get inside a woman?"
]>>
<<set _micropenis_assert_useless to [
	"there's no way a dick that small could ever please anyone,",
	"Christ, I would be surprised if that could get past someone's lips,"
]>>

<<set _big_penis_all to []>>
<<set _big_penis_all to _big_penis_all.concat(_big_penis_affection)>>
<<set _big_penis_all to _big_penis_all.concat(_big_penis_size_remarks)>>
<<set _big_penis_all to _big_penis_all.concat(_big_penis_surprise)>>
<<set _big_penis_all to _big_penis_all.concat(_big_penis_question_use)>>

<<set _normal_penis_all to []>>
<<set _normal_penis_all to _normal_penis_all.concat(_normal_penis_size_remarks)>>
<<set _normal_penis_all to _normal_penis_all.concat(_normal_penis_affection)>>

<<set _small_penis_all to []>>
<<set _small_penis_all to _small_penis_all.concat(_small_penis_affection)>>
<<set _small_penis_all to _small_penis_all.concat(_small_penis_size_remarks)>>
<<set _small_penis_all to _small_penis_all.concat(_small_penis_surprise)>>
<<set _small_penis_all to _small_penis_all.concat(_small_penis_insult)>>
<<set _small_penis_all to _small_penis_all.concat(_small_penis_question_use)>>
<<set _small_penis_all to _small_penis_all.concat(_small_penis_assert_useless)>>

<<set _micropenis_all to []>>
<<set _micropenis_all to _micropenis_all.concat(_micropenis_size_remarks)>>
<<set _micropenis_all to _micropenis_all.concat(_micropenis_surprise)>>
<<set _micropenis_all to _micropenis_all.concat(_micropenis_insult)>>
<<set _micropenis_all to _micropenis_all.concat(_micropenis_question_use)>>
<<set _micropenis_all to _micropenis_all.concat(_micropenis_assert_useless)>>
<</widget>>

<<widget "generatepenisremark">>
	/* if we haven't set our data yet */
	<<if !_big_penis_all or !_small_penis_all or !_micropenis_all or !_normal_penis_all>>
		<<bodycommentsetdata>>
	<</if>>

	<<set _output_line to "">>
	<<set _possibilities to []>>

	/* do we have anything notable downstairs */
	<<if $penissize is 4>>
		/* big pp */
		<<set _possibilities to _big_penis_all>>
		<<set _output_line to _possibilities.pluck()>>

	<<elseif $penissize <=1 and $penissize > -1>>
		/* smol pp */
		<<set _possibilities to _small_penis_all>>
		<<set _output_line to _possibilities.pluck()>>
		<<if $args[0] is "capitalise">>
			<<set _output_line to _output_line[0].toUpperCase() + _output_line.substring(1)>>
		<</if>>
	<<elseif $penissize is -1>>
		/* micro pp */
		<<set _possibilities to _micropenis_all.concat(_micro_penis_all)>>
		<<set _output_line to _possibilities.pluck()>>
	<<else>>
		/* normal pp */
		<<set _possibilities to _normal_penis_all.concat(_normal_penis_all)>>
		<<set _output_line to _possibilities.pluck()>>
	<</if>>
<</widget>>

/* modifier widgets because boy do i love bad practises */

<<widget "bodyremarkcapitalise">>
	<<set _output_line to _output_line[0].toUpperCase() + _output_line.substring(1)>>
<</widget>>

<<widget "bodyremarkcomma">>
	<<if !_output_line[_output_line.length - 1].match(/[.,:;!?]/)>>
		<<set _output_line to _output_line + ",">>
	<</if>>
<</widget>>

<<widget "bodyremarkstop">>
	<<if !_output_line[_output_line.length - 1].match(/[.,:;!?]/)>>
		<<set _output_line to _output_line + ".">>
	<</if>>
<</widget>>

/* hellish mess of output widget defitions */

<<widget "penisremark">>
	<<generatepenisremark>>
	<<print _output_line>>
<</widget>>
<<widget "Penisremark">>
	<<generatepenisremark>>
	<<bodyremarkcapitalise>>
	<<print _output_line>>
<</widget>>
<<widget "penisremarkquote">>
	<<generatepenisremark>>
	"<<print _output_line>>"
<</widget>>
<<widget "Penisremarkquote">>
	<<generatepenisremark>>
	<<bodyremarkcapitalise>>
	"<<print _output_line>>"
<</widget>>

<<widget "penisremarkstop">>
	<<generatepenisremark>>
	<<bodyremarkstop>>
	<<print _output_line>>
<</widget>>
<<widget "Penisremarkstop">>
	<<generatepenisremark>>
	<<bodyremarkcapitalise>>
	<<bodyremarkstop>>
	<<print _output_line>>
<</widget>>
<<widget "penisremarkstopquote">>
	<<generatepenisremark>>
	<<bodyremarkstop>>
	"<<print _output_line>>"
<</widget>>
<<widget "Penisremarkstopquote">>
	<<generatepenisremark>>
	<<bodyremarkcapitalise>>
	<<bodyremarkstop>>
	"<<print _output_line>>"
<</widget>>

<<widget "penisremarkcomma">>
	<<generatepenisremark>>
	<<bodyremarkcomma>>
	<<print _output_line>>
<</widget>>
<<widget "Penisremarkcomma">>
	<<generatepenisremark>>
	<<bodyremarkcapitalise>>
	<<bodyremarkcomma>>
	<<print _output_line>>
<</widget>>
<<widget "penisremarkcommaquote">>
	<<generatepenisremark>>
	<<bodyremarkcomma>>
	"<<print _output_line>>"
<</widget>>
<<widget "Penisremarkcommaquote">>
	<<generatepenisremark>>
	<<bodyremarkcapitalise>>
	<<bodyremarkcomma>>
	"<<print _output_line>>"
<</widget>>

<<widget "pillorypeniscomment">>
	<<Penisremarkquote>> a person in the crowd yells.
	<<trauma 5>><<gtrauma>>
	<<incgpenisinsecurity>>
<</widget>>