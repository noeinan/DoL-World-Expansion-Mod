:: Widgets Shop [widget]

/*
First argument - slot
Second argument - bought or stolen
Third argument - worn or send
Forth argument - item index*/

<<widget "shopbuy">>
<<set _shop_temp to $args[3]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if _shop_temp isnot undefined and ($randomLock isnot true or $args[1] is "try")>>
	<<clothingShopColorSet $args[0]>>
<</if>>

<<if $args[0] is "upper" or $args[0] is "lower">>
	<<ShowUnderEquip "normal">>
<</if>>
<<if $args[0] is "over_upper" or $args[0] is "over_lower" or $args[0] is "over_head">>
	<<ShowUnderEquip "over">>
<</if>>
<<if $args[1] is "buy">>
	You buy the <<print setup.clothes[$args[0]][_shop_temp].name>>.
	<br><br>
<<elseif $args[1] is "steal">>
	You steal the <<print setup.clothes[$args[0]][_shop_temp].name>>.
	<br><br>
<<elseif $args[1] is "try">>
	<<tryOnWear $args[0] _shop_temp>>
<<elseif $args[1] is "return">>
	<<clothingReset $args[0]>>
<<elseif $args[1] is "reset">>
	<<unset $colouraction>>
	<<unset $colouraction2>>
	<<unset $accessorycolouraction>>
	<<unset $accessorycolouraction2>>
	<<set $shopDefaults.colorSet to null>>
	<<set $shopDefaults.secColorSet to null>>
	<<unset $randomLock>>
<</if>>

<<if $args[2] is "wear">>
	<<generalWear $args[0] _shop_temp $colouraction2 $accessorycolouraction2>>
	<<updateOwned $args[0]>>
<<elseif $args[2] is "send">>
	<<set _loop to $args[4]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<generalSend "wardrobe" $args[0] _shop_temp $colouraction2 $accessorycolouraction2>>
		<<clothingShopColorSet $args[0]>>
	<</for>>
<</if>>

<</widget>>

<<widget "clothingShopColorSet">>
<<if $colouraction is "random">>
	<<set _colouractionChoices to clone(setup.clothes[$args[0]][_shop_temp].colour_options)>>
	<<run _colouractionChoices.delete("custom")>>
	<<set $colouraction2 to _colouractionChoices.pluck()>>
<<else>>
	<<set $colouraction2 to clone($colouraction)>>
<</if>>
<<if $accessorycolouraction is "random">>
	<<set _accessorycolouractionChoices to clone(setup.clothes[$args[0]][_shop_temp].accessory_colour_options)>>
	<<run _accessorycolouractionChoices.delete("custom")>>
	<<set $accessorycolouraction2 to _accessorycolouractionChoices.pluck()>>
<<else>>
	<<set $accessorycolouraction2 to clone($accessorycolouraction)>>
<</if>>
<</widget>>

<<widget "clothingShop">>
<<if $args[0]>>
	<<set $clothingShopSlot to $args[0]>>
<</if>>
<input type="button" value="DEFAULT OPTIONS" onclick="Wikifier.wikifyEval('<<shopDefaultOptionsToggle>>');">
<input type="button" value="FILTERS" onclick="Wikifier.wikifyEval('<<shopClothingFilterToggle>>');">
<div id="shopDefault" class="hidden">
	<<shopDefaultOptions>>
</div>
<br>
<div id="shopClothingFilter" class="hidden no-numberify">
	<<shopClothingFilterSettings>>
</div>
<<for _label, _value range $shopClothingFilter.reveal>>
	<<if _value is false>>
		<<set _revealFilter to true>>
		<<break>>
	<</if>>
<</for>>
<<if $shopClothingFilter.gender isnot "none" or $shopClothingFilter.traits.length isnot 0 or _revealFilter>>
	<br>
	<span class="green">The filter is currently active!</span> <<link [[Reset it|$passage]]>><<shopClothingFilterReset>><</link>>
	<br><br>
<</if>>
<<if $clothes_choice and setup.clothes[$clothingShopSlot][$clothes_choice] is undefined>>
	<<unset $clothes_choice>>
<<elseif $clothes_choice>>
	<<set _temp_choice to clone(setup.clothes[$clothingShopSlot][$clothes_choice])>>
	<<if _temp_choice.plural is 1>>
		<<integrity $clothes_choice_integrity "cap">>
	<<else>>
		A <<integrity $clothes_choice_integrity>>
	<</if>>
	and <<reveal $clothes_choice_reveal>> <<print _temp_choice.name>>.
	<<if _temp_choice.gender is "m">>
		<span class="lblue">For boys.</span>
	<<elseif _temp_choice.gender is "f">>
		<span class="pink">For girls.</span>
	<</if>>
	<<print _temp_choice.description>> Costs <<printmoney `getClothingCost(_temp_choice)`>>.
	<br>
	<<warmth _temp_choice.warmth>>
	<br><br>
	<<shoptraits>>
	<<set _slimeSlots to ["over_upper","over_lower","upper","lower","under_upper","under_lower"]>>
	<<if !_slimeSlots.includes($clothingShopSlot) or $willpower gte 800 or _temp_choice.reveal gte 500 or _temp_choice.type.includesAny("school", "event") or $corruption_slime lt 80>>
		<<if _temp_choice.colour_options.length gt 1>>
			<<run _temp_choice.colour_options.pushUnique("random")>>
			There's a range of colours to choose from:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
				<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
					<<set $colouraction to $shopDefaults.color>>
					<<set $shopDefaults.colorSet to $shopDefaults.color>>
				<</if>>
				<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e].replace(/ /g, '-') + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e].replace(/ /g, '-') + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
			<br><br>
		<</if>>
		<<if _temp_choice.accessory_colour_options.length isnot 0>>
			<<run _temp_choice.accessory_colour_options.pushUnique("random")>>
			Secondary colour:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
				<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
					<<set $accessorycolouraction to $shopDefaults.secColor>>
					<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
				<</if>>
				<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e].replace(/ /g, '-') + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e].replace(/ /g, '-') + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
			<br><br>
		<</if>>
		<<if _temp_choice.colour_options.length gt 1 or _temp_choice.accessory_colour_options.length gt 1>>
			<input type="button" value="Custom Colours" onclick="Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
			<br>
			<<shopCustomColors>>
		<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage $clothingShopSlot $clothes_choice>></div>
			<br>
		<</if>>
		<<set _cost to clone(getClothingCost(_temp_choice))>>
		<<unset _cursedPrevent>>
		<<set _outfitPrimaryShop to _temp_choice.outfitPrimary>>
		<<set _preventSlots to []>>
		<<set _wardrobeSlots to [$clothingShopSlot]>>
		<<if $worn[$clothingShopSlot].cursed is 1>>
			<<set _cursedPrevent to true>>
			<<run _preventSlots.push($clothingShopSlot)>>
		<</if>>
		<<if _outfitPrimaryShop isnot undefined>>
			<<for _labelShop, _valueShop range _outfitPrimaryShop>>
				<<run _wardrobeSlots.push(_labelShop)>>
				<<if $worn[_labelShop].cursed is 1>>
					<<set _cursedPrevent to true>>
					<<run _preventSlots.push(_labelShop)>>
				<</if>>
			<</for>>
		<</if>>
	<<warmth_description>>
	<br><br>
		<<shopBuyItemStatus _wardrobeSlots>>
		<<if _spaceLeft lt 1>>
			<span class="blue">Your wardrobe is full.</span>
			<br>
		<<elseif $daystate is "night">>
			<<if $clothingShop.stolenClothes lte 20>>
				<<if $worn[$clothingShopSlot].cursed is 1>>
					<span class="blue">You can't wear this item without first removing your
					<<for _i to 0; _i lt _preventSlots.length; _i++>>
						<<print $worn[_preventSlots[_i]].name>><<if _preventSlots.length gt 2 and _i lt _preventSlots.length - 2>>,
						<<elseif _preventSlots.length gte 2 and _i is _preventSlots.length - 2>>
							and
						<</if>>
					<</for>>
					.</span>
					<br>
				<<else>>
					<<link [[Steal and wear|$passage]]>>
						<<shopbuy $clothingShopSlot "steal" "wear" $clothes_choice>><<crimeup `_cost / 100`>><<unset $clothes_choice>>
						<<set $clothingShop.stolenClothes++>>
						<<set $clothingShop.totalStolenClothes++>>
					<</link>><<crime>>
					<br>
				<</if>>
				<<link [[Steal and take home|$passage]]>>
					<<shopbuy $clothingShopSlot "steal" "send" $clothes_choice>><<crimeup `_cost / 100`>>
					<<set $clothingShop.stolenClothes++>>
					<<set $clothingShop.totalStolenClothes++>>
					<<if $shopDefaults.disableReturn is false>>
						<<unset $clothes_choice>>
					<</if>>
				<</link>><<crime>>
				<br>
			<<else>>
				<span class="red">You can't carry any more clothes with you.</span> You should take them to your wardrobe.
				<br>
			<</if>>
		<<elseif $money gte _cost>>
			<<if _cursedPrevent is true>>
				<span class="blue">You can't wear this item without first removing your
				<<for _i to 0; _i lt _preventSlots.length; _i++>>
					<<print $worn[_preventSlots[_i]].name>><<if _preventSlots.length gt 2 and _i lt _preventSlots.length - 2>>,
					<<elseif _preventSlots.length gte 2 and _i is _preventSlots.length - 2>>
						and
					<</if>>
				<</for>>
				.</span>
				<br>
			<<else>>
				<<link [[Buy and wear|$passage]]>>
					<<clothingReset $clothingShopSlot>>
					<<shopbuy $clothingShopSlot "buy" "wear" $clothes_choice>>
					<<set $money -= _cost>>
					<<unset $clothes_choice>>
				<</link>>
				<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>>
				<<clothingReset $clothingShopSlot>>
				<<shopbuy $clothingShopSlot "buy" "send" $clothes_choice 1>>
				<<set $money -= _cost>>
				<<if $shopDefaults.disableReturn is false>>
					<<unset $clothes_choice>>
				<</if>>
			<</link>>
			<<if $money gte _cost * 5 and _spaceLeft gte 5>>
				| <<link [[X 5|$passage]]>>
					<<clothingReset $clothingShopSlot>>
					<<shopbuy $clothingShopSlot "buy" "send" $clothes_choice 5>>
					<<set $money -= _cost * 5>>
					<<if $shopDefaults.disableReturn is false>>
						<<unset $clothes_choice>>
					<</if>>
				<</link>>
			<</if>>
			<br>
		<<else>>
			<span class="pink">You cannot afford this item.</span>
			<br>
		<</if>>
		<<if _cursedPrevent is true>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try on|$passage]]>><<shopbuy $clothingShopSlot "try" null $clothes_choice>><<set $randomLock to true>><</link>>
			<br>
			<<if $tryOn.tryingOn[[$clothingShopSlot]] isnot null>>
			<<link [[Return|$passage]]>><<shopbuy $clothingShopSlot "return" null $clothes_choice>><<unset $randomLock>><</link>>
			<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
		<br>
	<</if>>
<</if>>
<br>

<<switch $location>>
	<<case "shopping_centre">><<set _shopLocation to "clothing">>
	<<case "forest_shop">><<set _shopLocation to "forest">>
	<<default>><<set _shopLocation to $location>>
<</switch>>
<<if _shopLocation>>
	<<if $shopListStartCount is undefined>>
		<<set $shopListStartCount to 0>>
	<</if>>
	<<if $shopListMax is undefined>>
		<<set $shopListMax to 15>>
	<</if>>
	<<set _listCount to 0>><<set _trueListCount to 0>>
	<<for _i to 0; _i lt setup.clothes[$clothingShopSlot].length; _i++>>
		<<set _item to clone(setup.clothes[$clothingShopSlot][_i])>>
		<<if !_item.shop.includes(_shopLocation) or _item.outfitSecondary isnot undefined>>
			<<continue>>
		<</if>>
		<<if (_item.outfitPrimary is undefined and $args[1] is "outfits")
		or (_item.outfitPrimary isnot undefined and $args[1] is "non-outfits")>>
			<<continue>>
		<</if>>

		<<if $shopClothingFilter.gender isnot "none">>
			<<if _item.gender isnot $shopClothingFilter.gender>>
				<<continue>>
			<</if>>
		<</if>>

		<<if $shopClothingFilter.traits.length gt 0>>
			<<set _skip to true>>
		<</if>>
		<<for _trait range $shopClothingFilter.traits>>
			<<if _item.type.includes(_trait) is true>>
				<<set _skip to false>>
				<<break>>
			<</if>>
		<</for>>
		<<if _skip>>
			<<continue>>
		<</if>>

		<<if between(_item.reveal, 900, 1000) and $shopClothingFilter.reveal.lewd isnot true>>
			<<continue>>
		<<elseif between(_item.reveal, 700, 899) and $shopClothingFilter.reveal.risqué isnot true>>
			<<continue>>
		<<elseif between(_item.reveal, 500, 699) and $shopClothingFilter.reveal.seductive isnot true>>
			<<continue>>
		<<elseif between(_item.reveal, 300, 499) and $shopClothingFilter.reveal.comfy isnot true>>
			<<continue>>
		<<elseif between(_item.reveal, 200, 299) and $shopClothingFilter.reveal.tasteful isnot true>>
			<<continue>>
		<<elseif between(_item.reveal, 100, 199) and $shopClothingFilter.reveal.smart isnot true>>
			<<continue>>
		<<elseif between(_item.reveal, 0, 99) and $shopClothingFilter.reveal.unassuming isnot true>>
			<<continue>>
		<</if>>

		<<run _trueListCount++>>
		<<if _listCount is $shopListMax + $shopListStartCount>>
			<<continue>>
		<</if>>
		<<run _listCount++>>
		<<if _listCount - $shopListStartCount <= 0>>
			<<continue>>
		<</if>>
		<<clothingicon _item>>
		<<if $specialClothes[_item.name.replace(/ /g,"")] is "locked">>
			<span class="lblue">_item.name_cap</span>
		<<else>>
			<<capture _item _i>>
				<<link [[_item.name_cap|$passage]]>>
					<<set $clothes_choice to _i>>
					<<set $clothes_choice_reveal to clone(_item.reveal)>>
					<<set $clothes_choice_integrity to (_item.integrity_max)>>
				<</link>>
			<</capture>>
		<</if>>
		| <span class="teal"><<printmoney `getClothingCost(_item)` true>></span> |
		<<if _item.gender is "m">>
			<span class="blue">♂</span>
		<<elseif _item.gender is "f">>
			<span class="pink">♀</span>
		<</if>>
		<<if $specialClothes[_item.name.replace(/ /g,"")] isnot undefined>>
			<<if $specialClothes[_item.name.replace(/ /g,"")] is "locked">>
				<span class="black">Locked</span>
			<<elseif $specialClothes[_item.name.replace(/ /g,"")] is "unlocked">>
				<span class="gold">Unlocked</span>
			<</if>>
			<<specialClothesHint>>
			- <<print _specialClothesHint[_item.name.replace(/ /g,"")]>>
		<</if>>
		<br>
	<</for>>
	<br>
	<<if _trueListCount is 0>>
		//No items found//
		<br>
	<<elseif $shopListStartCount gte $shopListMax or _listCount is $shopListMax + $shopListStartCount>>
		<<if $shopListStartCount gte $shopListMax>>
			<<link [["Previous Page"|$passage]]>>
				<<run $shopListStartCount -= $shopListMax>>
			<</link>>
			<<set _extrabr to true>>
		<<else>>
			Previous Page
		<</if>>
		| Page
		<<print ($shopListStartCount / $shopListMax) + 1>>
		of
		<<print Math.floor(_trueListCount / $shopListMax) + 1>> |
		<<if _listCount is $shopListMax + $shopListStartCount>>

			<<link [["Next Page"|$passage]]>>
				<<run $shopListStartCount += $shopListMax>>
			<</link>>
			<<set _extrabr to true>>
		<<else>>
			Next Page
		<</if>>
	<</if>>
	<<if _extrabr>>
		<br>
	<</if>>
<</if>>
<</widget>>

<<widget "shopTraitDescription">>

<<unset $noTraitDescription>>
<<switch $args[0]>>
	<<case "normal">>
		Normal - Suitable for everyday use.
	<<case "formal">>
		Formal - Suitable for important occasions, and for good etiquette among certain company.
	<<case "school">>
		School - Sanctioned uniform of the local school.
	<<case "glasses">>
		Glasses - Helps you focus, increasing the rate school skills are improved.
	<<case "cool">>
		Fashionable - Increases the rate status improves with your schoolmates, but some teachers may dislike it.
	<<case "swim">>
		Swimwear - Fares well underwater.
	<<case "diving">>
		Diving - Helps keep you warm in cold water.
	<<case "dance">>
		Dance - Flexible enough to withstand the rigours of the dance floor.
	<<case "costume">>
		Costume - People may look at this askance outside the right situations.
	<<case "serving">>
		Serving - Encourages tips when working as a bartender, waiter or waitress if visible.
	<<case "fetish">>
		Fetish - Intrinsically lewd.
	<<case "sleep">>
		Sleep - Soft and cosy. May improve sleep quality.
	<<case "mask">>
		Mask - Conceals your identity, stopping fame from increasing. Won't fool the police or people who know you.
	<<case "holy">>
		Holy - Sacred to the local faith. Increases purity gains and losses.
	<<case "dark">>
		Profane - Considered obscene by the local faith. Increases awareness gains and losses.
	<<case "binding">>
		Binding - Keeps your arms firmly secure and helpless.
	<<case "stealthy">>
		Stealthy - Makes your crimes harder to trace.
	<<case "sticky_fingers">>
		Sticky fingers - More likely to get your way, and keep that which isn't yours.
	<<case "rainproof">>
		Rainproof - Protects you from the rain.
	<<case "tanLines">>
		Tan Lines - Protects your skin from the sun leaving tan lines.
	<<case "bimbo">>
		Special - Something seems special about this set of clothing.
	<<case "heels">>
		High Heeled - Causes fatigue and tripping if you lack skilled feet. Improves kicking power.
	<<case "rugged">>
		Rugged - Helps you keep your footing in tough environments.
	<<case "chest_bind">>
		Chest Binding - Fits tight around your chest, concealing your breasts.
	<<case "eerie">>
		Eerie - <<if $transformdisable is "f">>Protects a specific transformation. Transformations progress and decay at midnight.<<else>>There's something peculiar about this object.<</if>>
	<<case "shade">>
		Shade - Blocks the sun and prevents ambient tanning.
	<<default>>
		<<set $noTraitDescription = 1>>
<</switch>>
<</widget>>

<<widget "shoptraits">>
Traits:
<br>
<<for _trait range $clothingTraits>>
	<<if _temp_choice.type.includes(_trait)>>
		<div class="trait-description">
			<<shopTraitDescription _trait>>
			<<if $noTraitDescription isnot 1>>
				<<clothingtrait _trait 1>>
				<br>
			<</if>>
		</div>
	<</if>>
<</for>>
<br>
<</widget>>

<<widget "shopDefaultOptions">>

<br>
<<set _colorOptions to ["black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow", "custom", "random"]>>
<<set _secondaryColorOptions to ["black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow", "custom", "random"]>>

Primary Colour:
<br>
<<for _i to 0; _i lt _colorOptions.length; _i++>>
	<label><<print '<span class="'+ _colorOptions[_i] +'">' + _colorOptions[_i] + '</span>'>>
	<<print '<<radiobutton "$shopDefaults.color" "'+ _colorOptions[_i] +'" ' + ($shopDefaults.color is _colorOptions[_i] ? "checked" : "") + '>>'>></label>
	|
<</for>>
<br>
Secondary Colour:
<br>
<<for _i to 0; _i lt _secondaryColorOptions.length; _i++>>
	<label><<print '<span class="'+ _secondaryColorOptions[_i] +'">' + _secondaryColorOptions[_i] + '</span>'>>
	<<print '<<radiobutton "$shopDefaults.secColor" "'+ _secondaryColorOptions[_i] +'" ' + ($shopDefaults.secColor is _secondaryColorOptions[_i] ? "checked" : "") + '>>'>></label>
	|
<</for>>
<br><br>
<label><<print '<<checkbox "$shopDefaults.disableReturn" false true '+($shopDefaults.disableReturn is true? "checked" : "")+'>>'>> Make it easier to send multiple of the same item home.</label>
<br>
<label><<print '<<checkbox "$shopDefaults.invertCustomColorsHidden" false true '+($shopDefaults.invertCustomColorsHidden is true? "checked" : "")+'>>'>> Show custom colours by default.</label>
<br>
<<if $images is 1>>
<label><<print '<<checkbox "$shopDefaults.invertImagesHidden" false true '+($shopDefaults.invertImagesHidden is true? "checked" : "")+'>>'>> Show clothes images by default.</label>
<br>
<</if>>
<br>
<label>
	<<if $shopListMax is undefined>>
		<<set $shopListMax to 15>>
	<</if>>
	Number of shop items to display at once:
	<<listbox "$shopListMax" autoselect>>
		<<option 10>>
		<<option 15>>
		<<option 20>>
		<<option 25>>
	<</listbox>>
</label>
<</widget>>

<<widget "shopDefaultOptionsToggle">>
<<toggleclass #shopDefault "hidden">>
<<addclass #shopClothingFilter "hidden">>
<</widget>>

<<widget "shopClothingFilterToggle">>
<<toggleclass #shopClothingFilter "hidden">>
<<addclass #shopDefault "hidden">>
<</widget>>

<<widget "shopClothingFilterSettings">>
<<if $shopClothingFilter is undefined>>
	<<set $shopClothingFilter to {
		gender: "none",
		traits: [],
		reveal:{
			lewd: true,
			risqué: true,
			seductive: true,
			comfy: true,
			tasteful: true,
			smart: true,
			unassuming: true
		},
		revealColour:{
			lewd: "red",
			risqué: "pink",
			seductive: "purple",
			comfy: "blue",
			tasteful: "lblue",
			smart: "teal",
			unassuming: "green"
		}
	}>>
	<<unset $shopClothingFilterTraits>>
	<<unset $shopClothingFilterGender>>
	<<unset $clothingTraitTypes>>
<</if>>
<br>
<b>Gender:</b>
<<listbox "$shopClothingFilter.gender" autoselect>>
	<<option "All" "none">>
	<<option "Male" "m">>
	<<option "Female" "f">>
	<<option "Unisex" "n">>
<</listbox>>
<br><br>

<b>How revealing clothing items should be:</b>
<br>
<<for _label, _value range $shopClothingFilter.reveal>>
	<label @class="$shopClothingFilter.revealColour[_label]"><<print '<<checkbox "$shopClothingFilter.reveal.'+_label+'" false true '+(_value ? "checked" : "")+'>>'>> <<print _label[0].toUpperCase() + _label.substring(1)>></label>
	<br>
<</for>>
<br>

<b>Traits (Hides any item without any of the selected traits, does not filter when none are selected):</b>
<br>
<<shopClothingFilterLoadTraits>>
<<for _index, _trait range _clothingTraitTypes>>
	<label>
		<<if $shopClothingFilter.traits.indexOf(_trait) is -1>>
			<input type="checkbox" @id="_trait" @value="_trait" onclick="window.shopClothingFilterToggleTrait(this.value)"><<shopTraitDescription _trait>>
		<<else>>
			<input type="checkbox" @id="_trait" @value="_trait" onclick="window.shopClothingFilterToggleTrait(this.value)" checked><<shopTraitDescription _trait>>
		<</if>>
	</label>
	<br>
<</for>>
<<link [[Select all traits|$passage]]>>
	<<for _index, _trait range _clothingTraitTypes>>
		<<run $shopClothingFilter.traits.pushUnique(_trait)>>
	<</for>>
<</link>>
<br><br>

<<link [[Reset filters|$passage]]>>
	<<shopClothingFilterReset>>
<</link>>
<br>
[[Apply|$passage]]

<</widget>>

<<widget "shopClothingFilterReset">>
<<if $shopClothingFilter is undefined>>
	<<set $shopClothingFilter = {}>>
<</if>>
<<set $shopClothingFilter.gender = { female: true, neutral: true, male: true }>>
<<set $shopClothingFilter.reveal = { from: 0, to: 9999 }>>
<<set $shopClothingFilter.warmth = { from: 0, to: 200 }>>
<<set $shopClothingFilter.traits = []>>
<<set $shopClothingFilter.active = false>>
<</widget>>

<<widget "shopClothingFilterLoadTraits">>
<<set _clothingTraitTypes to [
  "cool",
  "costume",
  "dance",
  "dark",
  "diving",
  "eerie",
  "fetish",
  "formal",
  "glasses",
  "heels",
  "holy",
  "mask",
  "normal",
  "rainproof",
  "rugged",
  "school",
  "serving",
  "sleep",
  "stealthy",
  "swim",
  "tanLines"
]>>

<<set _clothingTraitTypes to _clothingTraitTypes.sort(shopClothingFilterSortOnDescription)>>
<</widget>>

<<widget "shopCustomColorsToggle">>
<<toggleclass #shopCustomColorsDisplay "hidden">>
<<toggleclass #customColorBars "hidden">>
<<toggleclass #ColorsPresets "hidden">>
<</widget>>

<<widget "shopCustomColors">>
<br>
<div id="shopCustomColorsDisplay" @class="'shopCustomColors' + ($shopDefaults.invertCustomColorsHidden is true? '' : ' hidden')"><<shopCustomColorsDisplay>></div>
<div id="customColorBars" @class="'shopCustomColors' + ($shopDefaults.invertCustomColorsHidden is true? '' : ' hidden')"><<shopCustomColorsBars>></div>
<div style="clear:both;"></div>
<div id="ColorsPresets" @class="($shopDefaults.invertCustomColorsHidden is true? '' : 'hidden')"><<shopCustomColorsPresets>></div>
<</widget>>

<<widget "shopCustomColorsDisplay">>
__Custom Colours__
<div id="customColor">
	<div @style="customColour($customColors.color.primary, $customColors.saturation.primary, $customColors.brightness.primary, $customColors.contrast.primary, $customColors.sepia.primary)"></div>
	Primary - Colour: $customColors.color.primary | Saturation: $customColors.saturation.primary | Brightness: $customColors.brightness.primary | Contrast: $customColors.contrast.primary | Sepia: $customColors.sepia.primary
	<div @style="customColour($customColors.color.secondary, $customColors.saturation.secondary, $customColors.brightness.secondary, $customColors.contrast.secondary, $customColors.sepia.secondary)"></div>
	Secondary - Colour: $customColors.color.secondary | Saturation: $customColors.saturation.secondary | Brightness: $customColors.brightness.secondary | Contrast: $customColors.contrast.secondary | Sepia: $customColors.sepia.secondary
</div>
<br>
<label><<print '<<radiobutton "$customColors.currentType" "primary" ' + ($customColors.currentType is "primary" ? "checked" : "") + '>>'>> Primary</label> |
<label><<print '<<radiobutton "$customColors.currentType" "secondary" ' + ($customColors.currentType is "secondary" ? "checked" : "") + '>>'>> Secondary</label>
| <<link "Refresh">>
	<<replace #customColorBars>><<shopCustomColorsBars>><</replace>>
<</link>>
<br><br><br>
<<link "Reset selected to default">>
	<<set $customColors.color[$customColors.currentType] to 0>>
	<<set $customColors.saturation[$customColors.currentType] to 1>>
	<<set $customColors.brightness[$customColors.currentType] to 1>>
	<<set $customColors.contrast[$customColors.currentType] to 1>>
	<<set $customColors.sepia[$customColors.currentType] to 0>>
	<<replace #customColorBars>><<shopCustomColorsBars>><</replace>>
	<<replace #shopCustomColorsDisplay>><<shopCustomColorsDisplay>><</replace>>
<</link>>
<</widget>>

<<widget "shopCustomColorsBars">>

Colour:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="360" step="1" @value="$customColors.color[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','color', this.value)">
</div>
<br>
Saturation:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="2" step="0.05" @value="$customColors.saturation[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','saturation', this.value)">
</div>
<br>
Brightness:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0.5" max="4" step="0.05" @value="$customColors.brightness[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','brightness', this.value)">
</div>
Contrast:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="2" step="0.05" @value="$customColors.contrast[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','contrast', this.value)">
</div>
Sepia:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="1" step="0.05" @value="$customColors.sepia[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','sepia', this.value)">
</div>
<</widget>>

<<widget "shopCustomColorsSet">>
<<if $args[0] and $args[1]>>
	<<switch $args[0]>>
		<<case "color">><<set $customColors.color[$customColors.currentType] to $args[1]>>
		<<case "saturation">><<set $customColors.saturation[$customColors.currentType] to $args[1]>>
		<<case "brightness">><<set $customColors.brightness[$customColors.currentType] to $args[1]>>
		<<case "contrast">><<set $customColors.contrast[$customColors.currentType] to $args[1]>>
		<<case "sepia">><<set $customColors.sepia[$customColors.currentType] to $args[1]>>
	<</switch>>
	<<replace #shopCustomColorsDisplay>><<shopCustomColorsDisplay>><</replace>>
<</if>>
<</widget>>

<<widget "shopCustomColorsPresets">>
<br>
<label><<print '<<radiobutton "$customColors.action" "set" ' + ($customColors.action is "set" ? "checked" : "") + '>>'>> Set</label> |
<label><<print '<<radiobutton "$customColors.action" "delete" ' + ($customColors.action is "delete" ? "checked" : "") + '>>'>> Delete</label>
<<set _keys to Object.keys($customColors.presets)>>
<br>
<<for _i to 0; _i lt _keys.length;_i++>>
	<a @onclick="`wikifier('shopCustomColorsPresetsLoad',`+_i+`)`">_keys[_i]</a> |
<</for>>
<br>
Name: <input id="colorName" type="text" value="Custom" maxlength="30" onfocus="V.tempDisable = true;">
<br>
<<link [["Save Set"|$passage]]>>
	<<script>>
		T.colorName = document.getElementById("colorName").value.replace(/[^a-zA-Z 0-9]+/g,"");
	<</script>>
	<<set $customColors.presets[_colorName] to {
		color: $customColors.color,
		saturation: $customColors.saturation,
		brightness: $customColors.brightness,
		contrast: $customColors.contrast,
		sepia: $customColors.sepia
	}>>
	<<unset $tempDisable>>
<</link>>
<br><br>
<</widget>>

<<widget "shopCustomColorsPresetsLoad">>
<<set _presets to Object.keys($customColors.presets)>>
<<set _preset to _presets[$args[0]]>>
<<if $customColors.action is "set">>
	<<set $customColors.color.primary to $customColors.presets[_preset].color.primary>>
	<<set $customColors.color.secondary to $customColors.presets[_preset].color.secondary>>
	<<set $customColors.saturation.primary to $customColors.presets[_preset].saturation.primary>>
	<<set $customColors.saturation.secondary to $customColors.presets[_preset].saturation.secondary>>
	<<set $customColors.brightness.primary to $customColors.presets[_preset].brightness.primary>>
	<<set $customColors.brightness.secondary to $customColors.presets[_preset].brightness.secondary>>
	<<if $customColors.presets[_preset].contrast isnot undefined>>
		<<set $customColors.contrast.primary to $customColors.presets[_preset].contrast.primary>>
		<<set $customColors.contrast.secondary to $customColors.presets[_preset].contrast.secondary>>
	<</if>>
	<<if $customColors.presets[_preset].sepia isnot undefined>>
		<<set $customColors.sepia.primary to $customColors.presets[_preset].sepia.primary>>
		<<set $customColors.sepia.secondary to $customColors.presets[_preset].sepia.secondary>>
	<</if>>
	<<replace #shopCustomColorsDisplay>><<shopCustomColorsDisplay>><</replace>>
	<<replace #customColorBars>><<shopCustomColorsBars>><</replace>>
<<elseif $customColors.action is "delete">>
	<<set _newPresets to {}>>
	<<for _i to 0; _i lt _presets.length;_i++>>
		<<if _presets[_i] isnot _preset>>
			<<set _newPresets[_presets[_i]] to clone($customColors.presets[_presets[_i]])>>
		<</if>>
	<</for>>
	<<set $customColors.presets to clone(_newPresets)>>
	<<replace #ColorsPresets>><<shopCustomColorsPresets>><</replace>>
<</if>>
<</widget>>

/*Args: slots used in an array*/
<<widget "shopBuyItemStatus">>
<<if $args[0]>>
	<<set _undamagedCount to 0>>
	<<set _damagedCount to 0>>
	<<set _space to $wardrobe.space>>
	<<set _spaceLeft to clone(_space)>>
	<<for _i to 0; _i lt $args[0].length; _i++>>
		<<if _i is 0>>
			<<for _j to 0; _j lt $wardrobe[$args[0][0]].length; _j++>>
				<<if $wardrobe[$args[0][0]][_j].name is _temp_choice.name>>
					<<set _undamagedCount++>>
					<<if $wardrobe[$args[0][0]][_j].outfitPrimary isnot undefined>>
						<<for _valueShop range $wardrobe[$args[0][0]][_j].outfitPrimary>>
							<<if _valueShop is "broken">>
								<<set _damagedCount++>>
								<<set _undamagedCount-->>
								<<break>>
							<</if>>
						<</for>>
					<<else>>
						<<set _damagedCount to -1>>
					<</if>>
				<</if>>
			<</for>>
		<</if>>
		<<if _space - $wardrobe[$args[0][_i]].length lt _spaceLeft>>
			<<set _spaceLeft to _space - $wardrobe[$args[0][_i]].length>>
		<</if>>
		Wardrobe <<print ($args[0][_i]).replace("_"," ")>> slots used: <<print $wardrobe[$args[0][_i]].length>> / _space.
		<br>
	<</for>>
	<<if _undamagedCount gt 0>>
		You own _undamagedCount of this item<<if _damagedCount gte 0>> unbroken<</if>>.
		<br>
	<</if>>
	<<if _damagedCount gt 0>>
		You own _damagedCount of this item that have been broken in some way.
		<br>
	<</if>>
<</if>>
<</widget>>

/*Args: slot, itemName, outfit*/
<<widget "shopFullImage">>
<<if $args[0] and $args[1] isnot undefined>>
	<<set _shopFullImageVar to [$args[0], $args[1]]>>
	<a value="Refresh" onclick="Wikifier.wikifyEval('<<replace #shopFullImage>><<shopFullImage $clothingShopSlot $clothes_choice>><</replace>>');">Refresh</a>
	<br>
	<div class="hideImageOverflow">
		<div class="shopImg">
			<<set _customPrimary to customColour($customColors.color.primary, $customColors.saturation.primary, $customColors.brightness.primary, $customColors.contrast.primary, $customColors.sepia.primary)>>
			<<set _customSecondary to customColour($customColors.color.secondary, $customColors.saturation.secondary, $customColors.brightness.secondary, $customColors.contrast.secondary, $customColors.sepia.secondary)>>
			<<shopFullImageSlot $args[0] $args[1]>>
		</div>
	</div>
<</if>>
<</widget>>

<<widget "shopFullImageSlot">>
<<if $args[0] and $args[1]>>
	<<set $_slot to $args[0]>>
	<<set $_item to $args[1]>>
	<<if setup.clothes[$_slot][$_item].mainImage isnot 0>>
		<<shopFullImagePart $_slot $_item "full" $colouraction _customPrimary>>
	<</if>>
	<<if setup.clothes[$_slot][$_item].breast_img is 1>>
		<<switch $player.perceived_breastsize>>
			<<case 12>>
				<<set _breastSize to 6>>
			<<case 8 9 10 11>>
				<<set _breastSize to 5>>
			<<case 6 7>>
				<<set _breastSize to 4>>
			<<case 4 5>>
				<<set _breastSize to 3>>
			<<case 3>>
				<<set _breastSize to 2>>
			<<case 0 1 2>>
				<<set _breastSize to 1>>
		<</switch>>
		<<shopFullImagePart $_slot $_item `(_breastSize - 1)` $colouraction _customPrimary>>
	<</if>>
	<<if setup.clothes[$_slot][$_item].sleeve_img is 1>>
		<<shopFullImagePart $_slot $_item "right" $colouraction _customPrimary>>
		<<shopFullImagePart $_slot $_item "left" $colouraction _customPrimary>>
	<</if>>
	<<if setup.clothes[$_slot][$_item].leftImage is 1>>
		<<shopFullImagePart $_slot $_item "left" $colouraction _customPrimary>>
	<</if>>
	<<if setup.clothes[$_slot][$_item].rightImage is 1>>
		<<shopFullImagePart $_slot $_item "right" $colouraction _customPrimary>>
	<</if>>
	<<if setup.clothes[$_slot][$_item].accessory is 1>>
		<<shopFullImagePart $_slot $_item "acc" $accessorycolouraction _customSecondary>>
	<</if>>
	<<set $_outfitPrimary to setup.clothes[$_slot][$_item].outfitPrimary>>
	<<if $_outfitPrimary isnot undefined>>
		<<for $_label, $_value range $_outfitPrimary>>
			<<for $_i to 0; $_i < setup.clothes[$_label].length; $_i++>>
				<<if setup.clothes[$_label][$_i].name is $_value>>
					<<shopFullImageSlot $_label $_i>>
					<<break>>
				<</if>>
			<</for>>
		<</for>>
	<</if>>
<</if>>
<</widget>>

/*$args[0] - slot, $args[1] - itemNo, $args[2] - file, $args[3] - colour, $args[4] - custom colour*/
<<widget "shopFullImagePart">>
<img @class="'clothes-'+ (typeof($args[3]) == 'string' ? $args[3].replace(/ /g, '-') : '') + ' layer-' + $args[0]" @src="'img/clothes/' + $args[0] + '/' + setup.clothes[$args[0]][$args[1]].variable + '/' + $args[2] + '.png'" @style="($args[3] is 'custom'? $args[4]:'')">
<</widget>>

<<widget "shopFullImageToggle">>
<<toggleclass #shopFullImage "hidden">>
<</widget>>

<<widget "specialClothesSetup">>
<<if $specialClothes is undefined>>
	<<set $specialClothes to {
		"witchdress":"locked",
		"christmasdress":"locked",
		"serafuku":"locked",
		"vampirejacket":"locked",
		"slutshirt":"locked",
		"christmasshirt":"locked",
		"bellydancer'stop":"locked",
		"christmastrousers":"locked",
		"bellydancer'sbottoms":"locked",
		"loincloth":"locked",
		"witchhat":"locked",
		"christmashat":"locked",
		"chefhat":"locked",
		"fedora":"locked",
		"holypendant":"locked",
		"darkpendant":"locked",
		"stonependant":"locked",
		"christmaslegwarmers":"locked",
		"witchshoes":"locked",
		"mummyfacewrap":"locked",
		"mummytop":"locked",
		"mummyskirt":"locked",
		"catsuit":"locked",
		"holystole":"locked"
	}>>
<</if>>
<<if $specialClothes.cowbell is undefined>>
	<<set $specialClothes.cowbell to "locked">>
<</if>>
<<if $specialClothes.featheredhairclip is undefined>>
	<<set $specialClothes.featheredhairclip to "locked">>
<</if>>
<<if $specialClothes.catsuit is undefined>>
	<<set $specialClothes.catsuit to "locked">>
<</if>>
<<if $specialClothes.holystole is undefined>>
	<<set $specialClothes.holystole to "locked">>
<</if>>
<</widget>>

<<widget "specialClothesUpdate">>
<<if $headdrive is 1>>
	<<set $specialClothes["serafuku"] to "unlocked">>
<</if>>
<<if $undergroundescape isnot undefined>>
	<<set $specialClothes["slutshirt"] to "unlocked">>
<</if>>
<<if $days gte 47>>
	<<set $specialClothes["witchdress"] to "unlocked">>
	<<set $specialClothes["vampirejacket"] to "unlocked">>
	<<set $specialClothes["witchhat"] to "unlocked">>
	<<set $specialClothes["witchshoes"] to "unlocked">>
	<<set $specialClothes["mummyfacewrap"] to "unlocked">>
	<<set $specialClothes["mummytop"] to "unlocked">>
	<<set $specialClothes["mummyskirt"] to "unlocked">>
<</if>>
<<if $days gte 102>>
	<<set $specialClothes["christmasdress"] to "unlocked">>
	<<set $specialClothes["christmasshirt"] to "unlocked">>
	<<set $specialClothes["christmastrousers"] to "unlocked">>
	<<set $specialClothes["christmashat"] to "unlocked">>
	<<set $specialClothes["christmaslegwarmers"] to "unlocked">>
<</if>>
<<if $brothelshowdata.intro>>
	<<set $specialClothes["bellydancer'stop"] to "unlocked">>
	<<set $specialClothes["bellydancer'sbottoms"] to "unlocked">>
<</if>>
<<if $syndromeeden is 1 or $syndromewolves is 1>>
	<<set $specialClothes["loincloth"] to "unlocked">>
<</if>>
<<if $chef_state gte 9>>
	<<set $specialClothes["chefhat"] to "unlocked">>
<</if>>
<<if $fedora_unlock is 1>>
	<<set $specialClothes["fedora"] to "unlocked">>
<</if>>
<<if $soup_kitchen_known is 1>>
	<<set $specialClothes["holypendant"] to "unlocked">>
<</if>>
<<if $loft_known is 1>>
	<<set $specialClothes["darkpendant"] to "unlocked">>
<</if>>
<<if $stone_pendant_found is 1>>
	<<set $specialClothes["stonependant"] to "unlocked">>
<</if>>
<<if $livestock_intro isnot undefined>>
	<<set $specialClothes["cowbell"] to "unlocked">>
<</if>>
<<if $syndromebird is 1>>
	<<set $specialClothes["featheredhairclip"] to "unlocked">>
<</if>>
<<if $catsuit_found is true>>
	<<set $specialClothes["catsuit"] to "unlocked">>
<</if>>
<<if $grace gte 100>>
	<<set $specialClothes["holystole"] to "unlocked">>
<</if>>
<<set _count to 0>>
<<for $_label, $_value range $specialClothes>>
	<<if $_value is "unlocked">>
		<<set _count++>>
	<</if>>
<</for>>
<<if _count is Object.keys($specialClothes).length>>
	<<earnFeat "Curious Attire">>
<</if>>
/*Fix for previous save issue when starting without the specialClothing boost, should not be adjusted unless a similar issue occurs*/
<<if $featsBoosts is undefined>>
<<elseif $featsBoosts.upgrades.specialClothing is 40>>
	<<set $specialClothes["serafuku"] to "unlocked">>
	<<set $specialClothes["slutshirt"] to "unlocked">>
	<<set $specialClothes["witchdress"] to "unlocked">>
	<<set $specialClothes["vampirejacket"] to "unlocked">>
	<<set $specialClothes["witchhat"] to "unlocked">>
	<<set $specialClothes["witchshoes"] to "unlocked">>
	<<set $specialClothes["mummyfacewrap"] to "unlocked">>
	<<set $specialClothes["mummytop"] to "unlocked">>
	<<set $specialClothes["mummyskirt"] to "unlocked">>
	<<set $specialClothes["christmasdress"] to "unlocked">>
	<<set $specialClothes["christmasshirt"] to "unlocked">>
	<<set $specialClothes["christmastrousers"] to "unlocked">>
	<<set $specialClothes["christmashat"] to "unlocked">>
	<<set $specialClothes["christmaslegwarmers"] to "unlocked">>
	<<set $specialClothes["bellydancer'stop"] to "unlocked">>
	<<set $specialClothes["bellydancer'sbottoms"] to "unlocked">>
	<<set $specialClothes["loincloth"] to "unlocked">>
	<<set $specialClothes["chefhat"] to "unlocked">>
	<<set $specialClothes["fedora"] to "unlocked">>
	<<set $specialClothes["holypendant"] to "unlocked">>
	<<set $specialClothes["darkpendant"] to "unlocked">>
	<<set $specialClothes["stonependant"] to "unlocked">>
	<<set $specialClothes["cowbell"] to "unlocked">>
	<<set $specialClothes["featheredhairclip"] to "unlocked">>
	<<set $specialClothes["catsuit"] to "unlocked">>
	<<set $specialClothes["holystole"] to "unlocked">>
<</if>>

<</widget>>

<<widget "specialClothesHint">>
<<if _specialClothesHint is undefined>>
	<<set _specialClothesHint to {
		"witchdress":"In stock from the 21st of October.",
		"christmasdress":"In stock from the 15th of December.",
		"serafuku":"Discover the headteacher's secret.",
		"vampirejacket":"In stock from the 21st of October.",
		"slutshirt":"Survive slavery in an underground brothel.",
		"christmasshirt":"In stock from the 15th of December.",
		"bellydancer'stop":"Be offered the star role in a show at the brothel.",
		"christmastrousers":"In stock from the 15th of December.",
		"bellydancer'sbottoms":"Be offered the star role in a show at the brothel.",
		"loincloth":"Befriend a lonely hunter, or join a pack of wolves.",
		"witchhat":"In stock from the 21st of October.",
		"christmashat":"In stock from the 15th of December.",
		"chefhat":"Become famous for your cream buns.",
		"fedora":"Eavesdrop as a bartender and learn about a criminal undertaking.",
		"holypendant":"Discover the soup kitchen.",
		"darkpendant":"Discover Bailey's fear.",
		"stonependant":"Find beneath a loose stone at the temple.",
		"cowbell":"Become livestock.",
		"christmaslegwarmers":"In stock from the 15th of December.",
		"witchshoes":"In stock from the 21st of October.",
		"mummyfacewrap":"In stock from the 21st of October.",
		"mummytop":"In stock from the 21st of October.",
		"mummyskirt":"In stock from the 21st of October.",
		"featheredhairclip":"Romance an avian.",
		"catsuit":"Pillage a shipment.",
		"holystole":"Requires sufficient devotion."
	}>>
<</if>>
<</widget>>

<<widget "updatesidebarimg">>
	<<if $images is 1>>
		<<if $passage is "Start">>
			<<startingPlayerImageUpdate>>
		<<else>>
			<<replace "#sidebar-img-container">><<img>><</replace>>
		<</if>>
	<</if>>
<</widget>>
