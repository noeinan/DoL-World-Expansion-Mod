:: Widgets Beast Generation [widget]
<<widget "generateBEAST">>
<!-- NEW Args are NPC#(1-6), Type, Gender-->
<!-- Example: <<generateBEAST 1 dog m>> would generate NPC 1 as male dog -->
<!-- Example: <<generateBEAST 2 wolf f>> would generate NPC 2 as female wolf -->

<!-- Checks if endevent was properly used after the last event -->
/*<<if $enemyno gte 1>>
<<set $endeventerror to $lastgenerated>>
<</if>>
<<set $lastgenerated to $passage>>*/

<<set _n to $args[0]-1>>
<<set _type to $args[1]>>
<<set _gen to $args[2]>>
<<set _beast_genitals to $args[3]>>
<<set _beast_monster to $args[4]>>

/*noeinan mod START*/
/*Added fox to beast types*/
/*Added cow to beast types*/
/*Added code by @note leven to simplify code and make adding new beast types easier in the future*/

<!-- Check that Type is known -->
<<if $BeastList.indexOf(_type) lt 0>>
    <span class="red">ERROR: generateBEAST _type is not on the BeastList</span>
<</if>>

/*noeinan mod END*/

<!-- Set gender and pronoun, random if unspecified -->
<<if _gen is "m" or _gen is "f">>
	<<set $NPCList[_n].gender to _gen>><<set $NPCList[_n].pronoun to _gen>>
<<else>>
	<<set $rng to random(1, 100)>>
	<<if $beastmalechance lt $rng>>
		<<set $NPCList[_n].gender to "f">>
		<<set $NPCList[_n].pronoun to "f">>
	<<else>>
		<<set $NPCList[_n].gender to "m">>
		<<set $NPCList[_n].pronoun to "m">>
	<</if>>
<</if>>

<<set $NPCList[_n].age to "adult">>
<<set $NPCList[_n].lefthand to "none">>
<<set $NPCList[_n].righthand to "none">>
<<set $NPCList[_n].mouth to 0>>
<<set $NPCList[_n].stance to "approach">>

<<set $NPCList[_n].location to {
	head: 0,
	genitals: 0,
}>>

<<if $enemyno lt 6>><<set $enemyno += 1>><</if>>

<<beastattribute _n _type>>



<</widget>>

<<widget "beastattribute">>
<!-- NEW Set Beast attributes. $arg[0] calls NPC number to be generated, arg[1] sets beast type -->

<<nounderwearcheck>>

<<set _n to $args[0]>>
<<set _type to $args[1]>>

<!-- Set genitals active -->
<<set _gen to $NPCList[_n].gender>>
<<if _beast_genitals is "penis">>
	<<set $NPCList[_n].penis to 0>>
	<<set $NPCList[_n].vagina to "none">>
<<elseif _beast_genitals is "vagina">>
	<<set $NPCList[_n].vagina to 0>>
	<<set $NPCList[_n].penis to "none">>
<<elseif _gen is "m">>
	<<set $NPCList[_n].penis to 0>>
	<<set $NPCList[_n].vagina to "none">>
<<elseif _gen is "f">>
	<<set $NPCList[_n].vagina to 0>>
	<<set $NPCList[_n].penis to "none">>
<</if>>

<<set $NPCList[_n].chest to "">>

<<set $NPCList[_n].insecurity to "none">>

<!-- Select Beast Description/Strength/Genital pairing -->
<!-- v2.7 $BeastList is 0-7: "dog", "cat", "pig", "wolf", "dolphin", "lizard", "bear", "creature" -->
<!-- v2.13 "horse" added to $BeastList -->

/*noeinan mod START*/
/*Added fox to beast types*/
/*Added cow to beast types*/
/*Added code by @note leven to simplify code and make adding new beast types easier in the future*/
/*Added code by @note leven to allow monster girls to have breasts, apparently base game doesn't have this wtf*/
/*Added data for new hawk enemy, some of which was missing*/

<<set _h to [200,150,200,300,200,250,200,500,200,500,200,500,500,200,400,200]>>
<<set _t to $BeastList>> 
<!-- as of 2.12.9a, ["dog","cat","pig","wolf","dolphin","lizard","bear","boar","creature","horse","fox","hawk","cattle","sheep","deer", "bee", "wasp", "hellhound"] -->
<<set _d to ["large","large","fat","enormous","bottlenose","scaly","brown","hairy","strange","huge","large","huge","huge","fluffy","sleek","strange","strange", "large"]>>
<<set _pd to ["knotted penis","spiked penis","penis","knotted penis","strange penis","penis","penis","penis","penis","equine cock","knotted penis","penis","bovine cock","penis","cock","cock","cock", "knotted penis"]>>
/% <<set _cla to [1,1,0,1,0,1,1,1,1,0,1,1,0,0,0,0,0]>> %/
<<set _ps to [2,2,2,3,2,2,3,3,2,5,5,2,5,2,4,2,2]>>
<<set _blo to [0,0,4,0,0,0,0,0,0,0,0,0,8,0,0,0,0]>>
<<set _bhi to [12,12,12,12,2,12,12,12,0,12,12,12,12,12,12,12,12]>>

/*noeinan mod END*/

<<set _i to $BeastList.indexOf(_type)>>
<<set $NPCList[_n].health to _h[_i]>>
<<set $NPCList[_n].description to _d[_i]>>
<<set $NPCList[_n].type to _t[_i]>>
/% <<set $NPCList[_n].claws to _cla[_i]>> %/
<<set $NPCList[_n].breastsize to 0>>
<<set $NPCList[_n].breastsdesc to "nipples">>
<<set $NPCList[_n].breastdesc to "nipple">>

<<set $NPCList[_n].fullDescription to $NPCList[_n].description + " ">>
<<if $NPCList[_n].pronoun is "m">>
	<<set $NPCList[_n].fullDescription += "male ">>
<<elseif $NPCList[_n].pronoun is "f">>
	<<set $NPCList[_n].fullDescription += "female ">>
<</if>>
<<set $NPCList[_n].fullDescription += $NPCList[_n].type>>

/*noeinan mod START*/
/*Added code to make sure cattle are categorized as bullboys and cowgirls*/
/*Added code to make sure sheep are categorized as ramboys and sheepgirls*/
/*Added code to make sure deer are categorized as stagboys and deergirls*/
/*Added code to make sure deer are categorized as beeboys and beegirls*/

<<if $NPCList[_n].type is "horse">>
	<<set $NPCList[_n].hair to either("appaloosa","bay","black","brown","buckskin","chestnut","cremello","dun","grey","overo","palomino","piebald","roan","skewbald","spotted","tobiano")>>
<</if>>

<!-- Set hallucination creatures to always be monsters. Shadow types could be .monster = "shadow" -->
<<if $NPCList[_n].type is "creature">>
	<<set $NPCList[_n].monster to "monster">>
<<elseif ($monsterchance gte $rng and $hallucinations gte 1) or ($monsterchance gte $rng and $monsterhallucinations is "f") or (_beast_monster is "monster") or ($bestialitydisable is "t")>>
	<<set $NPCList[_n].monster to "monster">>
	<<if $NPCList[_n].type is "horse">>
		<<set $NPCList[_n].type to "centaur">>
	<<elseif $NPCList[_n].type is "hawk">>
		<<set $NPCList[_n].type to "harpy">>
	<<elseif $NPCList[_n].type is "cattle">>
		<<if $NPCList[_n].gender is "f">>
			<<set $NPCList[_n].type to "cowgirl">>
		<<else>>
			<<set $NPCList[_n].type to "bullboy">>
		<</if>>
	<<elseif $NPCList[_n].type is "sheep">>
		<<if $NPCList[_n].gender is "f">>
			<<set $NPCList[_n].type to "sheepgirl">>
		<<else>>
			<<set $NPCList[_n].type to "ramboy">>
		<</if>>
	<<elseif $NPCList[_n].type is "deer">>
		<<if $NPCList[_n].gender is "f">>
			<<set $NPCList[_n].type to "deergirl">>
		<<else>>
			<<set $NPCList[_n].type to "stagboy">>
		<</if>>
	<<elseif $NPCList[_n].type is "bee">>
		<<if $NPCList[_n].gender is "f">>
			<<set $NPCList[_n].type to "beegirl">>
		<<else>>
			<<set $NPCList[_n].type to "beeboy">>
		<</if>>
	<<elseif $NPCList[_n].gender is "f">>
		<<set $NPCList[_n].type to $NPCList[_n].type + "girl">>
	<<else>>
		<<set $NPCList[_n].type to $NPCList[_n].type + "boy">>
	<</if>>
<<else>>
	<<set $NPCList[_n].monster to 0>>
<</if>>

<<<<<<< HEAD
/*noeinan mod END*/

/*noeinan mod START*/
/*Added code by @note leven to allow monster girls to have breasts, apparently base game doesn't have this wtf*/
/*Added code to allow beast NPCs to have both penis and vagina*/
=======
<<if $NPCList[_n].monster is "monster">>
	<<set $NPCList[_n].lefthand to 0>>
	<<set $NPCList[_n].righthand to 0>>
<</if>>

>>>>>>> Note'sUpdates/npcname_v3

<!-- Gender-swap monsters if needed -->
<<if $NPCList[_n].monster is "monster" and _beast_genitals is undefined>>
	<<if $NPCList[_n].gender is "m">>
		<<if random(0, 99) lte $ibchance>>
			<<set $NPCList[_n].penis to 0>>
			<<set $NPCList[_n].vagina to 0>>
			<<set $NPCList[_n].gender to "h">>
		<<elseif random(0, 99) lte $cbchance>>
			<<set $NPCList[_n].penis to "none">>
			<<set $NPCList[_n].vagina to 0>>
		<<else>>
			<<set $NPCList[_n].vagina to "none">>
			<<set $NPCList[_n].penis to 0>>
		<</if>>
	<<elseif $NPCList[_n].gender is "f">>
		<<if random(0, 99) lte $igchance>>
			<<set $NPCList[_n].vagina to 0>>
			<<set $NPCList[_n].penis to 0>>
			<<set $NPCList[_n].gender to "h">>
		<<elseif random(0, 99) lte $dgchance>>
			<<set $NPCList[_n].vagina to "none">>
			<<set $NPCList[_n].penis to 0>>
		<<else>>
			<<set $NPCList[_n].penis to "none">>
			<<set $NPCList[_n].vagina to 0>>
		<</if>>
		<!-- monster girls shall have bewbs, too! -->
        <<set _brdes to ["nipple","budding","tiny","small","pert","modest","full","large","ample","massive","huge","gigantic","enormous"]>>
        <<if $breast_mod gte _blo[_i]>><<set _blo[_i] to $breast_mod>><</if>>
        <<if $breast_mod gte _bhi[_i]>><<set _bhi[_i] to $breast_mod>><</if>>
        <<if $breast_mod lt 0>><<set _blo[_i] to Math.clamp(_blo[_i]+$breast_mod, 0, 12)>><<set _bhi[_i] to Math.clamp(_bhi[_i]+$breast_mod, 0, 12)>><</if>>
        <<set _rng to random(_blo[_i], _bhi[_i])>>
        <<set $NPCList[_n].breastsize to _rng>>
        <<switch _rng>>
            <<case 0>>
                <<set $NPCList[_n].breastsdesc to "nipples">>
                <<set $NPCList[_n].breastdesc to "nipple">>
            <<default>>
                <<set $NPCList[_n].breastsdesc to _brdes[_rng]+" breasts">>
                <<set $NPCList[_n].breastdesc to _brdes[_rng]+" breast">>
        <</switch>>
	<</if>>
<</if>>

/*noeinan mod END*/

<<if $NPCList[_n].penis isnot "none">>
	<<set $NPCList[_n].penisdesc to _pd[_i]>>
	<<set $NPCList[_n].penissize to _ps[_i]>>
<<else>>
	<<set $NPCList[_n].penisdesc to "none">>
	<<set $NPCList[_n].penissize to 0>>
<</if>>

/*noeinan mod START*/
/*Added cattle to list of NPC types that don't have claws*/

<<if $NPCList[_n].type is "horse" or $NPCList[_n].type is "centaur" or $NPCList[_n].type is "dolphin" or $NPCList[_n].type is "dolphinboy" or $NPCList[_n].type is "dolphingirl" or $NPCList[_n].type is "cattle" or $NPCList[_n].type is "bullboy" or $NPCList[_n].type is "cowgirl">>
	<<set $claws to 0>>
<</if>>

<</widget>>

/*noeinan mod END*/

<!-- Dolphin generate calls -->
<<widget "generatedolphin1">>
	<<generateBEAST 1 dolphin>>
<</widget>>

<<widget "generatedolphin2">>
	<<generateBEAST 2 dolphin>>
<</widget>>

<<widget "generatedolphin3">>
	<<generateBEAST 3 dolphin>>
<</widget>>

<<widget "generatedolphin4">>
	<<generateBEAST 4 dolphin>>
<</widget>>

<<widget "generatedolphin5">>
	<<generateBEAST 5 dolphin>>
<</widget>>

<<widget "generatedolphin6">>
	<<generateBEAST 6 dolphin>>
<</widget>>

<!-- Dog generate calls -->
<<widget "generatedog1">>
	<<generateBEAST 1 dog>>
<</widget>>

<<widget "generatedog2">>
	<<generateBEAST 2 dog>>
<</widget>>

<<widget "generatedog3">>
	<<generateBEAST 3 dog>>
<</widget>>

<<widget "generatedog4">>
	<<generateBEAST 4 dog>>
<</widget>>

<<widget "generatedog5">>
	<<generateBEAST 5 dog>>
<</widget>>

<<widget "generatedog6">>
	<<generateBEAST 6 dog>>
<</widget>>

<!-- Wolf generate calls -->
<<widget "generatewolf1">>
	<<generateBEAST 1 wolf>>
<</widget>>

<<widget "generatewolf2">>
	<<generateBEAST 2 wolf>>
<</widget>>

<<widget "generatewolf3">>
	<<generateBEAST 3 wolf>>
<</widget>>

<<widget "generatewolf4">>
	<<generateBEAST 4 wolf>>
<</widget>>

<<widget "generatewolf5">>
	<<generateBEAST 5 wolf>>
<</widget>>

<<widget "generatewolf6">>
	<<generateBEAST 6 wolf>>
<</widget>>

<!-- Cat generate calls -->
<<widget "generatecat1">>
	<<generateBEAST 1 cat>>
<</widget>>

<<widget "generatecat2">>
	<<generateBEAST 2 cat>>
<</widget>>

<<widget "generatecat3">>
	<<generateBEAST 3 cat>>
<</widget>>

<<widget "generatecat4">>
	<<generateBEAST 4 cat>>
<</widget>>

<<widget "generatecat5">>
	<<generateBEAST 5 cat>>
<</widget>>

<<widget "generatecat6">>
	<<generateBEAST 6 cat>>
<</widget>>

<!-- Pig generate calls -->
<<widget "generatepig1">>
	<<generateBEAST 1 pig>>
<</widget>>

<<widget "generatepig2">>
	<<generateBEAST 2 pig>>
<</widget>>

<<widget "generatepig3">>
	<<generateBEAST 3 pig>>
<</widget>>

<<widget "generatepig4">>
	<<generateBEAST 4 pig>>
<</widget>>

<<widget "generatepig5">>
	<<generateBEAST 5 pig>>
<</widget>>

<<widget "generatepig6">>
	<<generateBEAST 6 pig>>
<</widget>>

<!-- Boar generate calls -->
<<widget "generateboar1">>
	<<generateBEAST 1 boar>>
<</widget>>

<<widget "generateboar2">>
	<<generateBEAST 2 boar>>
<</widget>>

<<widget "generateboar3">>
	<<generateBEAST 3 boar>>
<</widget>>

<<widget "generateboar4">>
	<<generateBEAST 4 boar>>
<</widget>>

<<widget "generateboar5">>
	<<generateBEAST 5 boar>>
<</widget>>

<<widget "generateboar6">>
	<<generateBEAST 6 boar>>
<</widget>>

<!-- Lizard generate calls -->
<<widget "generatelizard1">>
	<<generateBEAST 1 lizard>>
<</widget>>

<<widget "generatelizard2">>
	<<generateBEAST 2 lizard>>
<</widget>>

<<widget "generatelizard3">>
	<<generateBEAST 3 lizard>>
<</widget>>

<<widget "generatelizard4">>
	<<generateBEAST 4 lizard>>
<</widget>>

<<widget "generatelizard5">>
	<<generateBEAST 5 lizard>>
<</widget>>

<<widget "generatelizard6">>
	<<generateBEAST 6 lizard>>
<</widget>>

<!-- Bear generate calls -->
<<widget "generatebear1">>
	<<generateBEAST 1 bear>>
<</widget>>

<<widget "generatebear2">>
	<<generateBEAST 2 bear>>
<</widget>>

<<widget "generatebear3">>
	<<generateBEAST 3 bear>>
<</widget>>

<<widget "generatebear4">>
	<<generateBEAST 4 bear>>
<</widget>>

<<widget "generatebear5">>
	<<generateBEAST 5 bear>>
<</widget>>

<<widget "generatebear6">>
	<<generateBEAST 6 bear>>
<</widget>>

<!-- creature generate calls -->
<<widget "generatecreature1">>
	<<generateBEAST 1 creature>>
<</widget>>

<<widget "generatecreature2">>
	<<generateBEAST 2 creature>>
<</widget>>

<<widget "generatecreature3">>
	<<generateBEAST 3 creature>>
<</widget>>

<<widget "generatecreature4">>
	<<generateBEAST 4 creature>>
<</widget>>

<<widget "generatecreature5">>
	<<generateBEAST 5 creature>>
<</widget>>

<<widget "generatecreature6">>
	<<generateBEAST 6 creature>>
<</widget>>

<!-- creature fox calls -->
<<widget "generatefox1">>
	<<generateBEAST 1 fox>>
<</widget>>

<<widget "generatefox2">>
	<<generateBEAST 2 fox>>
<</widget>>

<<widget "generatefox3">>
	<<generateBEAST 3 fox>>
<</widget>>

<<widget "generatefox4">>
	<<generateBEAST 4 fox>>
<</widget>>

<<widget "generatefox5">>
	<<generateBEAST 5 fox>>
<</widget>>

<<widget "generatefox6">>
	<<generateBEAST 6 fox>>
<</widget>>
