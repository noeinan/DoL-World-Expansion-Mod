:: Widgets Stats [widget]

<<widget "trauma">>
	<<if $args[0] or $args[1]>>
		<<if $args[0] gte 0>>
			<<set _trauma_mod to 1>>
			<<if $rapetrait gte 1>>
				<<set _trauma_mod *= 0.7>>
			<</if>>
			<<if $bestialitytrait gte 1 and $enemytype is "beast">>
				<<set _trauma_mod *= 0.7>>
			<</if>>
			<<if $tentacletrait gte 1 and $enemytype is "tentacles">>
				<<set _trauma_mod *= 0.7>>
			<</if>>
			<<set $trauma += Math.trunc((($args[0] * 3) - (($args[0] * 1.5) * ($control / $controlmax))) * _trauma_mod)>>
			<<if $dev is 1>><<set $control -= $args[0]>><</if>>
		<<else>>
			<<set $trauma += Math.trunc(($args[0] * 3) + (($args[0] * 1.5) * ($control / $controlmax)))>>
		<</if>>
	<</if>>
	<<if $trauma gte 1>>
		<<set $sleeptrouble to 1>>
	<<else>>
		<<set $sleeptrouble to 0>>
	<</if>>

	<<if $trauma gte ($traumamax / 10) * 1>>
		<<set $nightmares to 1>>
	<<else>>
		<<set $nightmares to 0>>
	<</if>>

	<<if $trauma gte ($traumamax / 10) * 7>>
		<<set $anxiety to 2>>
	<<elseif $trauma gte ($traumamax / 10) * 2>>
		<<set $anxiety to 1>>
	<<else>>
		<<set $anxiety to 0>>
	<</if>>

	<<if $trauma gte ($traumamax / 10) * 8>>
		<<set $flashbacks to 1>>
	<<else>>
		<<set $flashbacks to 0>>
	<</if>>

	<<if $trauma gte ($traumamax / 10) * 6>>
		<<set $panicattacks to 2>>
	<<elseif $trauma gte ($traumamax / 10) * 4>>
		<<set $panicattacks to 1>>
	<<else>>
		<<set $panicattacks to 0>>
	<</if>>

	<<updateHallucinations>>

	<<if $trauma gte $traumamax>>
		<<set $dissociation to 2>>
	<<elseif $trauma gte ($traumamax / 10) * 9>>
		<<set $dissociation to 1>>
	<<else>>
		<<set $dissociation to 0>>
	<</if>>
<</widget>>

<<widget "combattrauma">>
	<<if $args[0]>>
		<<if $args[0] gte 0>>
			<<set _trauma_mod to 1>>
			<<if $rapetrait gte 1>>
				<<set _trauma_mod *= 0.7>>
			<</if>>
			<<if $bestialitytrait gte 1 and $enemytype is "beast">>
				<<set _trauma_mod *= 0.7>>
			<</if>>
			<<if $tentacletrait gte 1 and $enemytype is "tentacles">>
				<<set _trauma_mod *= 0.7>>
			<</if>>
			<<set $trauma += Math.trunc((($args[0] * 1) - (($args[0] * 0.5) * ($control / $controlmax))) * _trauma_mod)>>
			<<if $dev is 1>><<set $control -= $args[0]>><</if>>
		<<else>>
			<<set $trauma += Math.trunc(($args[0] * 1) + (($args[0] * 0.5) * ($control / $controlmax)))>>
		<</if>>
	<</if>>
<</widget>>

<<widget "straighttrauma">>
	<<if $args[0]>>
		<<set $trauma += ($args[0] * 1)>>
	<</if>>
<</widget>>

<<widget "updateHallucinations">>
	<<if $trauma gte ($traumamax / 10) * 5 or $awareness gte 400 or $hallucinogen gt 0 or ($moonstate is "evening" and $hour gte 21 or $moonstate is "morning" and $hour lte 6)>>
		<<set $hallucinations to 2>>
	<<elseif $trauma gte ($traumamax / 10) * 3 or $awareness gte 300>>
		<<set $hallucinations to 1>>
	<<else>>
		<<set $hallucinations to 0>>
	<</if>>
<</widget>>

<<widget "control">>
	<<if $args[0]>>
		<<set $control += ($args[0] * 10)>>
		<<if $args[0] gte 1>>
			<<set $controlstart += ($args[0] * 10)>>
		<</if>>
		<<if $control gte ($controlmax / 5) * 2>>
			<<set $controlled to 1>>
		<<else>>
			<<set $controlled to 0>>
		<</if>>
	<</if>>
<</widget>>

<<widget "combatcontrol">>
	<<if $args[0]>>
		<<set $control += ($args[0] * 10)>>
		<<if $control gte $controlstart>>
			<<set $control to $controlstart>>
		<</if>>
		<<if $control gte ($controlmax / 5) * 2>>
			<<set $controlled to 1>>
		<<else>>
			<<set $controlled to 0>>
		<</if>>
	<</if>>
<</widget>>

<<widget "corruption">>
<<if $args[0]>>
	<<set $corruption_slime += $args[0]>>
<</if>>
<</widget>>

/*noeinan mod START*/
/*added sheep to the check*/
<<widget "semenvolume">>
	<<if $args[0] and $player.penisExist>>
		<<set $semen_volume += ($args[0] * 3)>>
		<<if $cow gte 6>>
			<<set $semen_volume += ($args[0] * 3)>>
		<<elseif $sheep gte 6>>
			<<set $semen_volume += ($args[0] * 2)>>
		<</if>>
		<<set $semen_volume = Math.clamp($semen_volume, 0, $semen_max)>>
	<</if>>
<</widget>>

<<widget "milkvolume">>
	<<if $args[0]>>
		<<if $args[0] gt 0>>
			<<set $lactation_pressure += 1>>
			<<if $cow gte 6 or $sheep gte 6>>
				<<set $lactation_pressure += 1>>
			<</if>>
		<</if>>
		<<if $lactating is 1>>
			<<set $milk_volume += ($args[0] * 2)>>
			<<if $cow gte 6>>
				<<set $milk_volume += ($args[0] * 2)>>
			<<elseif $sheep gte 6>>
				<<set $milk_volume += ($args[0] * 1.5)>>
			<</if>>
			<<set $milk_volume = Math.clamp($milk_volume, 24, $milk_max)>>
		<</if>>
	<</if>>
<</widget>>

/*noeinan mod END*/

<<widget "stress">>
<<if $drunk gte 480>>
	<<set _stress_mod to 10>>
<<elseif $drunk gte 360>>
	<<set _stress_mod to 15>>
<<elseif $drunk gte 240>>
	<<set _stress_mod to 20>>
<<elseif $drunk gte 120>>
	<<set _stress_mod to 25>>
<<elseif $drunk gte 1>>
	<<set _stress_mod to 30>>
<<else>>
	<<set _stress_mod to 40>>
<</if>>
<<if $body_temperature is "cold">>
	<<set _stress_mod *= 3.0>>
<<elseif $body_temperature is "chilly">>
	<<set _stress_mod *= 1.5>>
<</if>>
<<if $args[0]>>
	<<if $args[0] gt 0>>
		<<set $stress += ($args[0] * _stress_mod)>>
	<<else>>
		<<set $stress += ($args[0] * 80)>>
	<</if>>
<</if>>
<</widget>>

<<widget "arousal">>
	<<if $args[0] gte 0 or $args[0] lt 0>>
		<<set _orgasmTraitMod to 1>>
		<<set _chokeTraitMod to 1>>
		<<if $orgasmtrait gte 1 and $args[0] gte 1>>
			<<set _orgasmTraitMod to 0.6>>
		<</if>>
		<<if $choketrait gte 1>>
			<!-- up to x2 arousal gain when suffocating -->
			<<set _chokeTraitMod += ($oxygenmax - $oxygen) / 1200>>
		<</if>>
		<<set $arousal to Math.clamp($arousal + ($args[0] * _orgasmTraitMod * _chokeTraitMod), 0, $arousalmax)>>
		<<if $args[0] gte 0>>
			<<if $args[1] is true>>
				<<if $trackedArousal.length gt 4>>
					<<run $trackedArousal.deleteAt(0)>>
					<!--add current arousal level to previous hour, low arousal level matters less-->
					<<set $trackedArousal[$trackedArousal.length - 1] += $arousal * $arousal / ($arousalmax * 0.8)>>
				<</if>>
				<<run $trackedArousal.push(0)>>
			<</if>>
			<<set $trackedArousal[$trackedArousal.length - 1] += $args[0]>>
		<</if>>
	<<else>>
		<<if $arousalError is undefined>>
			<<set $arousalError to [$args[0]]>>
		<<elseif $arousalError.length gte 50>>
			<<set $arousalError to [$args[0]]>>
		<<else>>
			<<set $arousalError.push($args[0])>>
		<</if>>
	<</if>>
<</widget>>

<<widget "breastarousal">>
	<<if $args[0] gte 0 or $args[0] lt 0>>
		<<set $arousal += ($args[0] * $breastsensitivity)>>
		<<if $args[0] gte 0>>
			<<set $trackedArousal[$trackedArousal.length - 1] += $args[0] * $breastsensitivity>>
		<</if>>
	<<else>>
		<<if $arousalError is undefined>>
			<<set $arousalError to [$args[0]]>>
		<<elseif $arousalError.length gte 50>>
			<<set $arousalError to [$args[0]]>>
		<<else>>
			<<set $arousalError.push($args[0])>>
		<</if>>
	<</if>>
<</widget>>

<<widget "genitalarousal">>
	<<if $args[0] gte 0 or $args[0] lt 0>>
		<<set $arousal += ($args[0] * $genitalsensitivity)>>
		<<if $args[0] gte 0>>
			<<set $trackedArousal[$trackedArousal.length - 1] += $args[0] * $genitalsensitivity>>
		<</if>>
	<<else>>
		<<if $arousalError is undefined>>
			<<set $arousalError to [$args[0]]>>
		<<elseif $arousalError.length gte 50>>
			<<set $arousalError to [$args[0]]>>
		<<else>>
			<<set $arousalError.push($args[0])>>
		<</if>>
	<</if>>
<</widget>>

<<widget "tiredness">>
<<set _tiredness_mod to 1>>
<<if $body_temperature is "hot">>
	<<set _tiredness_mod += 2>>
<<elseif $body_temperature is "warm">>
	<<set _tiredness_mod += 0.5>>
<</if>>
<<if $args[0]>>
	<<if $args[1] is "pass">>
		<<set $tiredness += ($args[0] * _tiredness_mod)>>
	<<else>>
		<<if $args[0] gt 0>>
			<<set $tiredness += ($args[0] * 15 * _tiredness_mod)>>
		<<else>>
			<<set $tiredness += ($args[0] * 20 * _tiredness_mod)>>
		<</if>>
	<</if>>
<</if>>
<</widget>>

<<widget "pain">>
<!-- Including masochism effect for all pain NG v2.7 -->
	<<if $args[0] gte 0 or $args[0] lt 0>>
		<<if $masochism gte 100>>
			<<set $pain += (($args[0] * (1 - ($masochism / 1200)) * (1 - ($sciencetrait / 10))) * 4)>>
			<<set _arousal to (($args[0] * (0 + ($masochism / 24))) * 4)>>
			<<arousal _arousal>>
			<<set $arousalmasochism += ($args[0] * (0 + ($masochism / 14)))>>
		<<else>>
		<<set $pain += ($args[0] * 4)>>
		<</if>>
	<</if>>
<</widget>>

<<widget "masopain">>
	<<if $args[0]>>
		<<set $pain += (($args[0] * (1 - ($masochism / 1200))) * 4)>>
		<<set _arousal to (($args[0] * (0 + ($masochism / 18))) * 4)>>
		<<arousal _arousal>>
	<</if>>
<</widget>>

<<widget "detention">>
	<<if $args[0] and $statFreeze isnot true>>
		<<if $args[0] gt 0>>
			<<set $detention += ($args[0] * 10)>>
		<</if>>
		<<set $delinquency += ($args[0] * 4)>>
	<</if>>
<</widget>>

<<widget "status">>
	<<if $args[0] and $statFreeze isnot true>>
		<<if $args[0] gt 0>>
			<<set $cool += ($args[0] * 1)>>
			<<if $worn.face.type.includes("cool")>>
				<<set $cool += ($args[0] * 1)>>
			<</if>>
			<<if $worn.head.type.includes("cool")>>
				<<set $cool += ($args[0] * 1)>>
			<</if>>
			<<if $worn.upper.type.includes("cool")>>
				<<set $cool += ($args[0] * 1)>>
			<</if>>
		<<elseif $args[0] lt 0>>
			<<set $cool *= (1 - ($args[0] / -100))>>
			<<set $cool -= 1>>
		<</if>>
	<</if>>
<</widget>>

<<widget "spray">>
	<<if $args[0]>>
		<<if $args[0] gte 0>>
			<<set $spray += $args[0]>>
			<<set $spray to Math.clamp($spray, 0, $spraymax)>>
		<<else>>
			<<if $infinitespray is 1>>
			<<else>>
				<<if $prof.spray gte random(1, 5000)>>
					<<set $effectsmessage to 1>>
					<<set $prof_spray_message to 1>>
				<<else>>
					<<set $spray += $args[0]>>
					<<set $spray to Math.clamp($spray, 0, $spraymax)>>
					<<prof spray `(($args[0] * -1) * 5)`>>
				<</if>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "awareness">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $awareness += ($args[0])>>
		<<for _e to 0; _e lt $clothing_number; _e++>>
		<<activeclothes>>
			<<if $worn[_active_clothes].type.includes("dark")>>
				<<set $awareness += ($args[0])>>
			<</if>>
		<</for>>
	<</if>>
<</widget>>

<<widget "purity">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $purity += ($args[0])>>
		<<for _e to 0; _e lt $clothing_number; _e++>>
		<<activeclothes>>
			<<if $worn[_active_clothes].type.includes("holy")>>
				<<set $purity += ($args[0])>>
			<</if>>
		<</for>>
	<</if>>
<</widget>>

<<widget "suspicion">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $suspicion += ($args[0])>>
	<</if>>
<</widget>>

<<widget "asylumstatus">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $asylumstatus += ($args[0] * 1)>>
	<</if>>
<</widget>>

<<widget "humiliation10">>
	<<set $stress += 40>>
	<<trauma 1>>
<</widget>>

<<widget "wolfpacktrust">>
	<<set $wolfpacktrust += 1>>
	<span class="green">The pack trusts you a little more.</span>
<</widget>>

<<widget "wolfpackfear">>
	<<set $wolfpackfear += 1>>
	<span class="green">The pack fears you a little more.</span>
<</widget>>

<<widget "gferocity">>
	<<set $wolfpackferocity += 1>>
	| <span class="blue">+ Ferocity</span>
<</widget>>

<<widget "gharmony">>
	<<set $wolfpackharmony += 1>>
	| <span class="lblue">+ Harmony</span>
<</widget>>

<<widget "lferocity">>
	<<set $wolfpackferocity -= 1>>
	| <span class="purple">- Ferocity</span>
<</widget>>

<<widget "lharmony">>
	<<set $wolfpackharmony -= 1>>
	| <span class="pink">- Harmony</span>
<</widget>>

<<widget "sub">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $submissive += ($args[0] * 5)>>
	<</if>>
<</widget>>

<<widget "def">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $submissive -= ($args[0] * 5)>>
	<</if>>
<</widget>>

<<widget "incgpenisinsecurity">>
	<<set _n to 10>>
	<<if $args[0] and typeof($args[0]) is "number">> <<set _n to $args[0]>> <</if>>
	<<switch $penissize>>
		<<case 4>>
			<<insecurity "penis_big" _n>><<ginsecurity "penis_big">>
		<<case 1>>
			<<insecurity "penis_small" _n>><<ginsecurity "penis_small">>
		<<case 0 -1 -2>>
			<<insecurity "penis_tiny" _n>><<ginsecurity "penis_tiny">>
	<</switch>>
<</widget>>

<<widget "incggpenisinsecurity">>
	<<incgpenisinsecurity 20>>
<</widget>>

<<widget "insecurity_gain">>
	<<set _acceptance to V["acceptance_" + $args[0]]>>
	<<set _insecurity to V["insecurity_" + $args[0]]>>
	<<set _stat_gain to ($args[1] * 10)>>
	
	<<set _insecurity_possible = {
		"penis_tiny": $player.penisExist and $penissize lte 0,
		"penis_small": $player.penisExist and $penissize is 1,
		"penis_big": $player.penisExist and $penissize gte 4,
		"breasts_tiny": $gender isnot "m",
		"breasts_small": true,
		"breasts_big": true
	}[_insecurity]>>

	<<if _acceptance lt 1000 and _insecurity_possible>>
		<<set _insecurity += _stat_gain>>
		<<set _insecurity = Math.clamp(_insecurity, 0, 1000)>>
		<<if _insecurity gte 1000>>
			<<stress 3>><<control -3>>
		<<elseif _insecurity gte 800>>
			<<stress 3>><<control -2>>
		<<elseif _insecurity gte 600>>
			<<stress 2>><<control -2>>
		<<elseif _insecurity gte 400>>
			<<stress 2>><<control -1>>
		<<elseif _insecurity gte 200>>
			<<stress 1>><<control -1>>
		<<else>>
			<<stress 1>>
		<</if>>
		<<set V["insecurity_" + $args[0]] to _insecurity>>
	<</if>>
<</widget>>

<<widget "insecurity">>
	/*
		args[0]: insecurity type 
		args[1]: amount to increase by
	*/
	<<if $args[0] and $args[1] and $statFreeze isnot true>>
		<<if ["penis_tiny", "penis_small", "penis_big", "breasts_tiny", "breasts_small", "breasts_big"].contains($args[0])>>
			<<insecurity_gain $args[0] $args[1]>>
		<<else>>
			<span class="red">INVALID INSECURITY TYPE SPECIFIED: <<print "insecurity_"+$args[0]>></span>
		<</if>>
	<</if>>
<</widget>>

<<widget "acceptance">>
	/*
		args[0]: insecurity type 
		args[1]: amount to increase by
	*/
	<<if $args[0] and $args[1] and $statFreeze isnot true>>
		/* note: this does not check if a player is capable of gaining acceptance, so dont use this widget without checking.  */
		<<if ["penis_tiny", "penis_small", "penis_big", "breasts_tiny", "breasts_small", "breasts_big"].contains($args[0])>>
			<<set V["acceptance_"+$args[0]] += ($args[1] * 6)>>
			<<set V["acceptance_"+$args[0]] = Math.clamp(V["acceptance_"+$args[0]], 0, 1000)>>
		<<else>>
			<span class="red">INVALID ACCEPTANCE TYPE SPECIFIED: <<print "acceptance_"+$args[0]>></span>
		<</if>>
	<</if>>
<</widget>>

<<widget "willpower">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $willpower += ($args[0] * 2)>>
	<</if>>
	<<set $willpower = Math.clamp($willpower, 0, $willpowermax)>>
<</widget>>

<<widget "hope">>
<<if $args[0] and $statFreeze isnot true>>
<<set $orphan_hope += ($args[0] * 2)>>
<</if>>
<</widget>>

<<widget "reb">>
<<if $args[0] and $statFreeze isnot true>>
<<set $orphan_reb += ($args[0] * 2)>>
<</if>>
<</widget>>

<<widget "grace">>/*Optional second variable is the rank of the NPC giving the order. Grace changes won't apply if the player's rank equals or exceeds the NPC's.*/
<<if $args[0] and $statFreeze isnot true>>
	<<if $args[1] is "monk">>
		<<if $temple_rank is "initiate">>
			<<set $grace += $args[0]>>
			<<set $grace = Math.clamp($grace, -100, 100)>>
		<<else>>
		<</if>>
	<<elseif $args[1] is "priest">>
		<<if $temple_rank is "initiate" or $temple_rank is "monk">>
			<<set $grace += $args[0]>>
			<<set $grace = Math.clamp($grace, -100, 100)>>
		<<else>>
		<</if>>
	<<elseif $args[1] is "bishop">>
		<<if $temple_rank is "initiate" or $temple_rank is "monk" or $temple_rank is "priest">>
			<<set $grace += $args[0]>>
			<<set $grace = Math.clamp($grace, -100, 100)>>
		<<else>>
		<</if>>
	<<else>>
		<<set $grace += $args[0]>>
		<<set $grace = Math.clamp($grace, -100, 100)>>
	<</if>>
<</if>>
<</widget>>

<<widget "livestock_obey">>
	<<if $args[0] and $statFreeze isnot true>>
		<<set $livestock_obey += $args[0]>>
		<<set $livestock_obey = Math.clamp($livestock_obey, 0, 100)>>
	<</if>>
<</widget>>

<<widget "shame">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $shame += $args[0]>>
	<<set $shame = Math.clamp($shame, 0, 100)>>
<</if>>
<</widget>>

<<widget "farm_yield">>
<<if $farm_yield is undefined>>
	<<set $farm_yield to 0>>
<</if>>
<<if $args[0] and $statFreeze isnot true>>
	<<set $farm_yield += $args[0]>>
<</if>>
<</widget>>

<<widget "oralskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $oralskill += $args[0]>>
<</if>>
<</widget>>

<<widget "vaginalskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $vaginalskill += $args[0]>>
<</if>>
<</widget>>

<<widget "penileskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $penileskill += $args[0]>>
<</if>>
<</widget>>

<<widget "handskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $handskill += $args[0]>>
<</if>>
<</widget>>

<<widget "analskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $analskill += $args[0]>>
<</if>>
<</widget>>

<<widget "feetskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $feetskill += $args[0]>>
<</if>>
<</widget>>

<<widget "bottomskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $bottomskill += $args[0]>>
<</if>>
<</widget>>

<<widget "thighskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $thighskill += $args[0]>>
<</if>>
<</widget>>

<<widget "chestskill">>
<<if $args[0] and $statFreeze isnot true>>
	<<set $chestskill += $args[0]>>
<</if>>
<</widget>>

<<widget "beauty">>
<<if $args[0]>>
	<<set $beauty += $args[0]>>
<</if>>
<</widget>>

<<widget "seductionskill">>
<<if $args[0]>>
	<<set $seductionskill += $args[0]>>
<</if>>
<</widget>>

<<widget "skulduggery">>
<<if $args[0]>>
	<<set $skulduggery += $args[0]>>
<</if>>
<</widget>>

<<widget "prof">>
<<if $args[0] and $args[1]>>
	<<set $prof[$args[0]] += ($args[1] * 5)>>
	<<set $prof[$args[0]] to Math.clamp($prof[$args[0]], 0, 1000)>>
<</if>>
<</widget>>

<<widget "locker_suspicion">>
<<if $args[0]>>
	<<set $locker_suspicion += $args[0]>>
<</if>>
<</widget>>