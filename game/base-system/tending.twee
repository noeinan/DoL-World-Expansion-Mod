:: Widgets Tending [widget]
<<widget "plots_init">>/*First variable: location. Second variable: number of plots. Third variable: ground type (earth, water). Fourth variable: plot quality, fifth variable: plot size*/
<<set $plots[$args[0]] to []>>
<<for _i to 0; _i lt $args[1]; _i++>>
	<<set $plots[$args[0]][_i] to clone(setup.plot_base)>>
	<<set $plots[$args[0]][_i].bed to $args[2]>>
	<<set $plots[$args[0]][_i].quality to $args[3]>>
	<<set $plots[$args[0]][_i].size to $args[4]>>
<</for>>

<</widget>>

<<widget "add_plot">>/*Adds a plot to an existing location. Arguments are as in the plots_init widget, but the second variable and beyond are shifted down one.*/
	<<set _i to $plots[$args[0]].length>>
	<<set $plots[$args[0]].push(clone(setup.plot_base))>>
	<<set $plots[$args[0]][_i].bed to $args[1]>>
	<<set $plots[$args[0]][_i].quality to $args[2]>>
	<<set $plots[$args[0]][_i].size to $args[3]>>
<</widget>>

<<widget "clear_plot">>/*Returns a plot to its default state. First argument: location. Second argument: index of plot to be reset.*/
	<<if $plots[$args[0]][$args[1]].baseQuality isnot undefined and $backgroundTraits.includes("greenthumb") is false>>
		<<if $plots[$args[0]][$args[1]].fertiliserDecay gt 0>>
			<<set $plots[$args[0]][$args[1]].fertiliserDecay-->>
		<</if>>
		<<if $plots[$args[0]][$args[1]].fertiliserDecay is 0 and $plots[$args[0]][$args[1]].quality > $plots[$args[0]][$args[1]].baseQuality>>
			<<set $plots[$args[0]][$args[1]].quality-->>
			<<set $plotDecay to 2>>
			<<if $plots[$args[0]][$args[1]].quality > $plots[$args[0]][$args[1]].baseQuality>>
				<<set $plots[$args[0]][$args[1]].fertiliserDecay to 2>>
				<<if $plots[$args[0]][$args[1]].size isnot "large">>
					<<set $plots[$args[0]][$args[1]].fertiliserDecay++>>
				<</if>>
				<<set $plotDecay to 1>>
			<</if>>
		<</if>>
	<</if>>

	<<set $plots[$args[0]][$args[1]].water to 0>>
	<<set $plots[$args[0]][$args[1]].days to 0>>
	<<set $plots[$args[0]][$args[1]].plant to "none">>
	<<set $plots[$args[0]][$args[1]].till to 0>>
	<<set $plots[$args[0]][$args[1]].stage to 0>>
<</widget>>

<<widget "display_quality">>
<<silently>>
<<switch $plots[$args[0]][$args[1]].bed>>
	<<case "water">><<set _bedType to "water">>
	<<case "earth">><<set _bedType to "soil">>
	<<default>><<set _bedType to clone($plots[$args[0]][$args[1]].bed)>>
<</switch>>
<<if $plots[$args[0]][$args[1]].quality is 1>>
	<<set $_result to `<span class="blue">poor `+_bedType+`</span>`>>
<<elseif $plots[$args[0]][$args[1]].quality is 2>>
	<<set $_result to `<span class="lblue">decent `+_bedType+`</span>`>>
<<elseif $plots[$args[0]][$args[1]].quality is 3>>
	<<set $_result to `<span class="teal">good `+_bedType+`</span>`>>
<<elseif $plots[$args[0]][$args[1]].quality gt 3>>
	<<set $_result to `<span class="green">excellent `+_bedType+`</span>`>>
<</if>>
<</silently>><<print $_result>>
<</widget>>

<<widget "display_plot">>/*Argument is the plot location you want to display.*/
<<set _water_needed to 0>>
There are <<number $plots[$args[0]].length>> tillable
<<if $plots[$args[0]][0].size is "small">>
	<span class="lblue">beds</span>
<<elseif $plots[$args[0]][0].size is "medium">>
	<span class="teal">plots</span>
<<else>>
	<span class="green">fields</span>
<</if>>
here. <<if $fertiliser.current gt 0 or $fertiliser.used gt 0>>You have <<number $fertiliser.current>> fertiliser.<</if>> Tilling time is reduced by tending skill.
<br><br>
<<for _i to 0; _i lt $plots[$args[0]].length; _i++>>
<<set _tending_temp to _i>>
<<capture _tending_temp>>
<span class="gold"><<wordify_i _i cap>> plot (<<display_quality $args[0] _tending_temp>>):</span>
	<<if $plots[$args[0]][_i].stage gte 5>>
		<span class="green">The <<print setup.plants[$plots[$args[0]][_i].name].plural>> are flowering, and ready for picking.</span>
		<br>
		<<if $plots[$args[0]][_tending_temp].size is "small">>
			<<link [[Pick (0:05)|$passage]]>><<pass 5>><<set $tending_harvest to 1>><<set $tending_harvest_name to clone($plots[$args[0]][_tending_temp].name)>><<set $tending_harvest_size to "small">><<set $tending_harvest_quality to clone($plots[$args[0]][_tending_temp].quality)>><<clear_plot $args[0] _tending_temp>><</link>>
			<br>
		<<elseif $plots[$args[0]][_tending_temp].size is "medium">>
			<<link [[Pick (0:15)|$passage]]>><<pass 15>><<set $tending_harvest to 1>><<set $tending_harvest_name to clone($plots[$args[0]][_tending_temp].name)>><<set $tending_harvest_size to "medium">><<set $tending_harvest_quality to clone($plots[$args[0]][_tending_temp].quality)>><<clear_plot $args[0] _tending_temp>><</link>>
			<br>
		<<else>>
			<<link [[Harvest (1:00)|$passage]]>><<pass 60>><<set $tending_harvest to 1>><<set $tending_harvest_name to clone($plots[$args[0]][_tending_temp].name)>><<set $tending_harvest_size to "large">><<set $tending_harvest_quality to clone($plots[$args[0]][_tending_temp].quality)>><<clear_plot $args[0] _tending_temp>><</link>>
			<br>
		<</if>>
	<<elseif $plots[$args[0]][_i].stage is 4>>
		<span class="teal">The <<print setup.plants[$plots[$args[0]][_i].name].plural>> are budding.</span>
	<<elseif $plots[$args[0]][_i].stage is 3>>
		<span class="lblue">The <<print setup.plants[$plots[$args[0]][_i].name].plural>> have grown into seedlings.</span>
	<<elseif $plots[$args[0]][_i].stage is 2>>
		<span class="blue">Thin <<print setup.plants[$plots[$args[0]][_i].name].plural>> sprout from the soil.</span>
	<<elseif $plots[$args[0]][_i].stage is 1>>
		<span class="blue">You planted <<print setup.plants[$plots[$args[0]][_i].name].name.replace(/_/g," ")>> seeds here.</span>
	<<else>>
		<<if $plots[$args[0]][_i].till gte 1>>
			The soil is ready for planting.
			<<if $plants_known.length is 0>>
				Search wild areas for seeds to plant.
			<</if>>
			<<for _e to 0; _e lt $plants_known.length; _e++>>
			<<capture _e>>
			<br>
			<<switch $args[0]>>
				<<case "farm">>
					<<if $farm.irrigation>>
						<<set _irrigation to $farm.irrigation>>
					<<else>>
						<<set _irrigation to 0>>
					<</if>>
				<<default>>
					<<set _irrigation to 0>>
			<</switch>>
			<<if setup.plants[$plants_known[_e]].season.includes($season) or ($args[0] is "garden" and $alex_greenhouse gte 3)>>
				<<if setup.plants[$plants_known[_e]].bed is $plots[$args[0]][_i].bed>>
					<<if $plots[$args[0]][_i].size is "small">>
						<<link `"Plant " + setup.plants[$plants_known[_e]].plural + " (0:30)"` $passage>><<pass 30>><<set $plots[$args[0]][_tending_temp].name to $plants_known[_e]>><<set $plots[$args[0]][_tending_temp].stage to 1>><<set $plot_planted to 1>><<if $weather is "rain" or _e lt _irrigation>><<set $plots[$args[0]][_tending_temp].water to 1>><</if>><</link>> <span class="orange">(<<print setup.plants[$plants_known[_e]].days>> days)</span>
					<<elseif $plots[$args[0]][_i].size is "medium">>
						<<link `"Plant " + setup.plants[$plants_known[_e]].plural + " (1:30)"` $passage>><<pass 90>><<set $plots[$args[0]][_tending_temp].name to $plants_known[_e]>><<set $plots[$args[0]][_tending_temp].stage to 1>><<set $plot_planted to 1>><<if $weather is "rain" or _e lt _irrigation>><<set $plots[$args[0]][_tending_temp].water to 1>><</if>><</link>> <span class="orange">(<<print setup.plants[$plants_known[_e]].days>> days)</span>
					<<else>>
						<<link `"Plant " + setup.plants[$plants_known[_e]].plural + " (3:00)"` $passage>><<pass 3 hours>><<set $plots[$args[0]][_tending_temp].name to $plants_known[_e]>><<set $plots[$args[0]][_tending_temp].stage to 1>><<set $plot_planted to 1>><<if $weather is "rain" or _e lt _irrigation>><<set $plots[$args[0]][_tending_temp].water to 1>><</if>><</link>> <span class="orange">(<<print setup.plants[$plants_known[_e]].days>> days)</span>
					<</if>>
				<<else>>
					<span class="blue"><<print setup.plants[$plants_known[_e]].plural.toLocaleUpperFirst()>> only grow in <<print setup.plants[$plants_known[_e]].bed>>.</span>
				<</if>>
			<<else>>
				<<tending_season_notice>>
			<</if>>
			<</capture>>
			<</for>>
			<br>
		<<else>>
			The soil is ready for tilling.
			<br>
			<<if $tending gte 1000>>
				<<set _baseTime to 5>>
				<<set _baseTiredsness to 1>>
			<<elseif $tending gte 800>>
				<<set _baseTime to 10>>
				<<set _baseTiredsness to 2>>
			<<elseif $tending gte 600>>
				<<set _baseTime to 15>>
				<<set _baseTiredsness to 3>>
			<<elseif $tending gte 400>>
				<<set _baseTime to 20>>
				<<set _baseTiredsness to 4>>
			<<elseif $tending gte 200>>
				<<set _baseTime to 25>>
				<<set _baseTiredsness to 5>>
			<<else>>
				<<set _baseTime to 30>>
				<<set _baseTiredsness to 6>>
			<</if>>
			<<if $plots[$args[0]][_i].size is "medium">>
				<<set _baseTime *= 3>>
				<<set _baseTiredsness *= 2>>
			<<elseif $plots[$args[0]][_i].size is "large">>
				<<set _baseTime *= 12>>
				<<set _baseTiredsness *= 6>>
			<</if>>
			<<if _baseTime % 60 is 0>>
				<<set _baseHours to _baseTime / 60>>
			<</if>>
			<<set _displayedMinutes to _baseTime % 60>>
			<<set _displayedHours to (_baseTime - _displayedMinutes) / 60>>
			<<if _displayedMinutes lt 10>>
				<<set _displayedMinutes to "0" + _displayedMinutes>>
			<</if>>
			<<capture _baseTiredsness _baseHours _baseTime>>
				<<link [["Till (" + _displayedHours + ":" + _displayedMinutes + ")"|$passage]]>>
					<<set $plot_tilled to 1>>
					<<tiredness _baseTiredsness>><<physique _baseTiredsness>>
					<<if _baseHours>>
						<<pass _baseHours hours>>
					<<else>>
						<<pass _baseTime>>
					<</if>>
					<<if $location is "farm">>
						<<farm_count _baseTime>>
					<</if>>
					<<set $plots[$args[0]][_tending_temp].till to 1>>
				<</link>><<gtiredness>>
			<</capture>>
			<br>
			<<if $fertiliser.current gte 1 and $plots[$args[0]][_i].quality lt 4 and $tending gte 400>>
				<<set _baseTimeFert to Math.floor(_baseTime * 1.5)>>
				<<if _baseTimeFert % 60 is 0>>
					<<set _baseHoursFert to _baseTimeFert / 60>>
				<</if>>
				<<set _displayedMinutesFert to _baseTimeFert % 60>>
				<<set _displayedHoursFert to (_baseTimeFert - _displayedMinutesFert) / 60>>
				<<if _displayedMinutesFert lt 10>>
					<<set _displayedMinutesFert to "0" + _displayedMinutesFert>>
				<</if>>
				<<capture _baseTimeFert _baseHoursFert _baseTiredsness>>
					<<link [["Till and apply fertiliser (" + _displayedHoursFert + ":" + _displayedMinutesFert + ")"|$passage]]>>
						<<set $plot_tilled_fertiliser to 1>>
						<<tiredness `Math.floor(_baseTiredsness * 1.5)`>>
						<<physique `Math.floor(_baseTiredsness * 1.5)`>>
						<<if _baseHoursFert>>
							<<pass _baseHoursFert hours>>
						<<else>>
							<<pass _baseTimeFert>>
						<</if>>
						<<if $location is "farm">>
							<<farm_count _baseTimeFert>>
						<</if>>
						<<set $plots[$args[0]][_tending_temp].till to 1>>
						<<set $fertiliser.current-->><<set $fertiliser.used++>>
						<<set $plots[$args[0]][_tending_temp].quality++>>
						<<if $backgroundTraits.includes("greenthumb") is false>>
							<<if $plots[$args[0]][_tending_temp].baseQuality is undefined>>
								<<set $plots[$args[0]][_tending_temp].baseQuality to clone($plots[$args[0]][_tending_temp].quality)>>
							<</if>>
							<<set $plots[$args[0]][_tending_temp].fertiliserDecay to 2>>
							<<if $plots[$args[0]][_tending_temp].size isnot "large">>
								<<set $plots[$args[0]][_tending_temp].fertiliserDecay++>>
							<</if>>
						<</if>>
					<</link>><<gtiredness>>
				<</capture>>
				<br>
			<</if>>
		<</if>>
	<</if>>
	<<if $plots[$args[0]][_i].stage gte 1>>
		<<if $plots[$args[0]][_i].bed is "water">>
			<br>
		<<elseif $plots[$args[0]][_i].water is 1>>
			<span class="green">The <<if $plots[$args[0]][_i].bed is "large">>field<<else>>plot<</if>> is watered.</span>
			<br>
		<<elseif $plots[$args[0]][_i].stage isnot 5 and $plots[$args[0]][_i].water isnot 1>>
			<span class="purple">The <<if $plots[$args[0]][_i].bed is "large">>field<<else>>plot<</if>> is dry.</span>
			<br>
			<<set _water_needed += 1>>
			<<if $plots[$args[0]][_i].size is "small">>
				<<link [[Water (0:05)|$passage]]>><<tending 1>><<pass 5>><<set $plots[$args[0]][_tending_temp].water to 1>><<set $plot_watered to 1>><<tiredness 1>><<physique 1>><<event_trigger>><</link>><<gtiredness>><<gtending>>
				<br>
			<<elseif $plots[$args[0]][_i].size is "medium">>
				<<link [[Water (0:15)|$passage]]>><<tending 2>><<pass 15>><<set $plots[$args[0]][_tending_temp].water to 1>><<set $plot_watered to 1>><<tiredness 2>><<physique 2>><<event_trigger>><</link>><<gtiredness>><<gtending>>
				<br>
			<<else>>
				<<link [[Water (1:00)|$passage]]>><<tending 6>><<pass 60>><<set $plots[$args[0]][_tending_temp].water to 1>><<set $plot_watered to 1>><<tiredness 6>><<physique 6>><<event_trigger>><</link>><<gtiredness>><<gtending>>
				<br>
			<</if>>
		<</if>>
	<</if>>
<</capture>>
<br>
<</for>>
<<if _water_needed gte 1>>
	<<if $plots[$args[0]][0].size is "small">>
		<<link [[Water all dry beds (0:05 per bed)|$passage]]>>
			<<for _i to 0; _i lt $plots[$args[0]].length; _i++>><<capture _i>>
				<<if $plots[$args[0]][_i].stage gte 1 and $plots[$args[0]][_i].stage lt 5 and $plots[$args[0]][_i].bed isnot "water" and $plots[$args[0]][_i].water is 0>>
					<<set $plots[$args[0]][_i].water to 1>><<pass 5>><<tending 1>><<event_trigger>>
				<</if>>
			<</capture>>
			<</for>>
			<<set $plots_watered to 1>>
			<<tiredness _water_needed>><<physique _water_needed>>
		<</link>><<gtiredness>><<gtending>>
		<br>
	<<elseif $plots[$args[0]][0].size is "medium">>
		<<link [[Water all dry plots (0:15 per plot)|$passage]]>>
			<<for _i to 0; _i lt $plots[$args[0]].length; _i++>><<capture _i>>
				<<if $plots[$args[0]][_i].stage gte 1 and $plots[$args[0]][_i].stage lt 5 and $plots[$args[0]][_i].bed isnot "water" and $plots[$args[0]][_i].water is 0>>
					<<set $plots[$args[0]][_i].water to 1>><<pass 15>><<tending 2>><<event_trigger>>
				<</if>>
			<</capture>>
			<</for>>
			<<set $plots_watered to 1>>
			<<set _water_needed_calculation to (_water_needed * 6)>>
			<<tiredness _water_needed_calculation>><<physique _water_needed_calculation>>
		<</link>><<gtiredness>><<gtending>>
		<br>
	<<else>>
		<<link [[Water all dry fields (1:00 per field)|$passage]]>>
			<<for _i to 0; _i lt $plots[$args[0]].length; _i++>><<capture _i>>
				<<if $plots[$args[0]][_i].stage gte 1 and $plots[$args[0]][_i].stage lt 5 and $plots[$args[0]][_i].bed isnot "water" and $plots[$args[0]][_i].water is 0>>
					<<set $plots[$args[0]][_i].water to 1>><<pass 60>><<tending 6>><<event_trigger>>
				<</if>>
			<</capture>>
			<</for>>
			<<set $plots_watered to 1>>
			<<set _water_needed_calculation to (_water_needed * 6)>>
			<<tiredness _water_needed_calculation>><<physique _water_needed_calculation>>
		<</link>><<ggtiredness>><<gtending>>
		<br>
	<</if>>
<</if>>
<</widget>>

<<widget "plot_effects">>
<<if $plot_watered is 1>><<unset $plot_watered>>
	You water the plot. <span class="gold">You get a good workout.</span>
	<br>
<<elseif $plots_watered is 1>><<unset $plots_watered>>
	You water the plots. <span class="gold">You get a good workout.</span>
	<br>
<</if>>
<<if $tending_harvest is 1>>
	<<tending_harvest $tending_harvest_name $tending_harvest_size $tending_harvest_quality>>
	<<unset $tending_harvest>><<unset $tending_harvest_name>><<unset $tending_harvest_size>><<unset $tending_harvest_quality>>
	<br>
<</if>>
<<if $plot_tilled is 1>>
	You get to work removing weeds and tilling the soil. It's hard going, but when you're done the soil is ready for planting. <span class="gold">You get a good workout.</span>
	<<unset $plot_tilled>>
	<br>
<</if>>
<<if $plot_tilled_fertiliser is 1>>
	You get to work removing weeds and tilling the soil while mixing in some fertiliser. It's hard going, but when you're done the soil is ready for planting. <span class="gold">You get a good workout.</span>
	<<unset $plot_tilled_fertiliser>>
<</if>>
<<if $plot_planted is 1>>
	You plant the seeds in the cool earth.
	<<unset $plot_planted>>
	<br>
<</if>>
<</widget>>

<<widget "tending_day">>
<<set _plotKeys to Object.keys($plots)>>
<<for _s to 0; _s lt _plotKeys.length; _s++>>
	<<set _plot to _plotKeys[_s]>>
	<<switch _plot>>
		<<case "farm">>
			<<if $farm.irrigation>>
				<<set _irrigation to $farm.irrigation>>
			<<else>>
				<<set _irrigation to 0>>
			<</if>>
		<<default>>
			<<set _irrigation to 0>>
	<</switch>>
	<<for _t to 0; _t lt $plots[_plot].length; _t++>>
		<<capture _t>>
		<<if $plots[_plot][_t].stage gte 1 and ($plots[_plot][_t].water is 1 or $plots[_plot][_t].bed is "water")>>
			<<set $plots[_plot][_t].days += 1>>
		<</if>>
		<<switch $plots[_plot][_t].stage>>
		<<case 4>>
			<<if $plots[_plot][_t].days gte setup.plants[$plots[_plot][_t].name].days and ($plots[_plot][_t].water is 1 or $plots[_plot][_t].bed is "water")>>
				<<set $plots[_plot][_t].stage to 5>>
			<</if>>
		<<case 3>>
			<<if $plots[_plot][_t].days gte (setup.plants[$plots[_plot][_t].name].days / 5) * 4 and ($plots[_plot][_t].water is 1 or $plots[_plot][_t].bed is "water")>>
				<<set $plots[_plot][_t].stage to 4>>
			<</if>>
		<<case 2>>
			<<if $plots[_plot][_t].days gte (setup.plants[$plots[_plot][_t].name].days / 5) * 3 and ($plots[_plot][_t].water is 1 or $plots[_plot][_t].bed is "water")>>
				<<set $plots[_plot][_t].stage to 3>>
			<</if>>
		<<case 1>>
			<<if $plots[_plot][_t].days gte (setup.plants[$plots[_plot][_t].name].days / 5) * 2 and ($plots[_plot][_t].water is 1 or $plots[_plot][_t].bed is "water")>>
				<<set $plots[_plot][_t].stage to 2>>
			<</if>>
		<</switch>>
		<<if $weather is "rain">>
			<<set $plots[_plot][_t].water to 1>>
		<<elseif _irrigation gt 0>>
			<<set $plots[_plot][_t].water to 1>>
			<<set _irrigation-->>
		<<else>>
			<<set $plots[_plot][_t].water to 0>>
		<</if>>
		<</capture>>
	<</for>>
<</for>>
<</widget>>

<<widget "tending_harvest">>
<<if $plants[$args[0]] is undefined>>
	<<set $plants[$args[0]] to {}>>
	<<set $plants[$args[0]].amount to 0>>
<</if>>
<<if $args[1] is "small">>
	<<set _tending_amount to random(10, ($tending / 20) + 10)>>
<<elseif $args[1] is "medium">>
	<<set _tending_amount to random(10, ($tending / 10) + 20)>>
<<else>>
	<<set _tending_amount to random(10, ($tending / 2) + 50)>>
<</if>>
<<set _tending_amount *= clone(setup.plants[$args[0]].multiplier)>>
<<if $args[2] gte 4>>
	<<set _tending_amount *= 1.6>>
<<elseif $args[2] is 3>>
	<<set _tending_amount *= 1.4>>
<<elseif $args[1] is 2>>
	<<set _tending_amount *= 1.2>>
<</if>>
<<if !$backgroundTraits.includes("greenthumb") and $tending is 1000 and ($fertiliser.used gte 40 or ($fertiliser.used gte 25 and $farm_stage gte 6)) and $plants_known.length gte 16>>
	<<run $backgroundTraits.pushUnique("greenthumb")>>
	<span class="gold">Spending a large amount of time in the dirt has given you a green thumb.</span>
	<br>
<</if>>
<<if $backgroundTraits.includes("greenthumb")>>
	<<set _tending_amount *= 1.2>>
<</if>>
<<set _tending_amount to Math.trunc(_tending_amount)>>
<<set $plants[$args[0]].amount += _tending_amount>>
<<set $plants[$args[0]].plural to clone(setup.plants[$args[0]].plural)>>
<<set $plants[$args[0]].name to clone(setup.plants[$args[0]].name)>>
You harvest <<number _tending_amount>> <<print setup.plants[$args[0]].plural>>.
<<if $plotDecay>>
	The fertiliser effect has decayed<<if $plotDecay is 2>> completely<</if>>.
	<<unset $plotDecay>>
<</if>>
<</widget>>

<<widget "tending_pick">>
<<if $plants[$args[0]] is undefined>>
	<<set $plants[$args[0]] to {}>>
	<<set $plants[$args[0]].amount to 0>>
<</if>>
<<set $plants[$args[0]].plural to clone(setup.plants[$args[0]].plural)>>
<<set $plants[$args[0]].name to clone(setup.plants[$args[0]].name)>>

<<if $args[2] gte 1>>
	<<set _tending_amount to random($args[1], $args[2])>>
<<else>>
	<<set _tending_amount to random(1, 5)>>
<</if>>

<<if !setup.plants[$args[0]].special.includes("large")>>
	<<set _tending_amount *= (1 + ($tending / 1000))>>
<</if>>
<<if $backgroundTraits.includes("greenthumb")>>
	<<set _tending_amount *= 1.2>>
<</if>>
<<set _tending_amount to Math.trunc(_tending_amount)>>
<<set $plants[$args[0]].amount += _tending_amount>>
<<set $wild_plant_stat += _tending_amount>>
You pick
<<if _tending_amount is 1>>
	a <<print setup.plants[$args[0]].name.replace(/_/g," ")>>.
<<else>>
	<<number _tending_amount>> <<print setup.plants[$args[0]].plural>>.
<</if>>
<</widget>>

<<widget "tending_give">>
<<if $args[0]>>
	<<if $plants[$args[0]] is undefined>>
		<<set $plants[$args[0]] to {}>>
		<<set $plants[$args[0]].amount to 0>>
	<</if>>
	<<set $plants[$args[0]].plural to clone(setup.plants[$args[0]].plural)>>
	<<set $plants[$args[0]].name to clone(setup.plants[$args[0]].name)>>
	<<if $args[1]>>
		<<set $plants[$args[0]].amount += $args[1]>>
	<<else>>
		<<set $plants[$args[0]].amount += 1>>
	<</if>>
<</if>>
<</widget>>

<<widget "tending_season_notice">>
<span class="blue">
<<print setup.plants[$plants_known[_e]].plural[0].toUpperCase() + setup.plants[$plants_known[_e]].plural.substring(1)>> can only be planted in
<<set _season_notice to clone(setup.plants[$plants_known[_e]])>>
<<for _x to 0; _x lt setup.plants[$plants_known[_e]].season.length; _x++>>
	<<if _season_notice.season.includes("spring")>>
		spring<<if setup.plants[$plants_known[_e]].season.length is _x + 1>>.<<else>>,<</if>>
		<<set _season_notice.season.delete("spring")>>
		<<set _season_noted to true>>
		<<continue>>
	<<elseif _season_notice.season.includes("summer")>>
		<<if setup.plants[$plants_known[_e]].season.length is _x + 1 and _season_noted>>and <</if>>summer<<if setup.plants[$plants_known[_e]].season.length is _x + 1>>.<<else>>,<</if>>
		<<set _season_notice.season.delete("summer")>>
		<<set _season_noted to true>>
		<<continue>>
	<<elseif _season_notice.season.includes("autumn")>>
		<<if setup.plants[$plants_known[_e]].season.length is _x + 1 and _season_noted>>and <</if>>autumn<<if setup.plants[$plants_known[_e]].season.length is _x + 1>>.<<else>>,<</if>>
		<<set _season_notice.season.delete("autumn")>>
		<<set _season_noted to true>>
		<<continue>>
	<<elseif _season_notice.season.includes("winter")>>
		<<if setup.plants[$plants_known[_e]].season.length is _x + 1 and _season_noted>>and <</if>>winter<<if setup.plants[$plants_known[_e]].season.length is _x + 1>>.<<else>>,<</if>>
		<<set _season_notice.season.delete("winter")>>
		<<set _season_noted to true>>
		<<continue>>
	<</if>>
<</for>>
</span>
<<unset _season_noted>>
<</widget>>